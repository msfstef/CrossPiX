{"version":3,"sources":["assets/logo.png","components/Slider.jsx","components/PreEditor.jsx","utilities/utilities.js","components/Pixelator.jsx","utilities/kmeans.js","utilities/symbols.js","components/Palette.jsx","components/ColorMapper.jsx","utilities/rgb_to_dmc.js","components/GenPdf.jsx","components/PatternMaker.jsx","components/ImgUploader.jsx","components/AppContainer.jsx","components/Header.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Slider","state","value","_this","props","defaultValue","textUpdate","textUpdateEnd","textUpdateDelay","handleText","setState","setTimeout","handler","valTxt","document","getElementById","name","slice","this","val","parseInt","isNaN","min","max","elem_val","_this2","react_default","a","createElement","className","title","id","type","step","onChange","maxLength","Component","PreEditor","contrast","saturation","handleSliderContrast","onImgLoad","handleSliderSaturation","img","Image","src","fileUrl","canvas","ctx","getContext","onload","proportion","height","width","container","getElementsByClassName","offsetWidth","offsetHeight","filter","clearRect","drawImage","imgc","getImageData","i","data","length","putImageData","outputHandler","preEditUrl","toDataURL","prevProps","_this3","window","addEventListener","src_components_Slider","toggleAliasing","toggle","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","canvas_arrow","context","headlen","fromx","fromy","tox","toy","angle","Math","atan2","beginPath","moveTo","lineTo","cos","PI","sin","stroke","ImageContainer","updateTimer","timeout","defaultHorStitches","defaultVertStitches","ratio","horStitches","vertStitches","maxSlider","handleSlider","hor","vert","new_hor","new_vert","ceil","buffer","buffer2","default_h","ctxb","ctxb2","fillRect","w","h","pixelUrl","lineWidth","textAlign","textBaseline","font","margin","textSize","measureText","fillStyle","rotate","fillText","clearTimeout","_this4","onClick","arrays_equal","a1","a2","get_pixel_dataset","resized_pixels","undefined","img_n_pixels","canvas_width","canvas_height","rescaled","pixels","aspect_ratio","scaling_factor","sqrt","floor","rescale_dimensions","canvas_n_pixels","flattened_dataset","n_channels","dataset","push","nearest_neighbor","point","neighbors","best_dist","Infinity","best_index","neighbor","dist","j","pow","centroid","running_centroid","quantize_img","k","centroids","source_canvas","source_context","flattened_source_data","n_pixels","flattened_quantized_data","Uint8ClampedArray","current_pixel","nearest_color","quantized_canvas","quantized_context","image","createImageData","set","quantize","rng_seed","random","idx","clusters","converged","cluster","centroid_i","k_means","stitch_symbols","Palette","palette","data_sorted","colors","key","sort","b","boxStyle","backgroundColor","style","ColorMapper","rgb_dmc","rgb_dmc_pure","defaultColors","symbols","src_qt","img_qt","initWidth","initHeight","imgdt","new_data","Array","ctr","r","g","new_dist","rd","gd","bd","rnew","gnew","bnew","color","code","hex","symb","count","colorUrl","Papa","parse","complete","results","map","subarray","_this5","array","temporaryValue","randomIndex","currentIndex","shuffle","nocolor","src_components_Palette","GenPdf","loading","genPdf","pdf","jsPDF","a4prop","margins","top","bottom","left","right","internal","pageSize","getWidth","getHeight","borders","strokeRect","bordersImg","paletteTable","paletteImage","pattern","pieces","splitImage","stitchSize","imagePieces","imageIdx","html2canvas","logging","then","tableWidth","tableHeight","addImage","spacing","addPage","save","noOfStitches","size","cols","rows","canvasWhole","ctxWhole","xStart","yStart","wholeSize","strokeStyle","sq","pieces_idx","PatternMaker","scale","canvasContainer","char","patternUrl","components_GenPdf","ImgUploader","show","require","alt","es","onDrop","handleDropFile","_ref","getRootProps","getInputProps","isDragActive","accept","handleSelectFile","AppContainer","loadFile","files","file","URL","createObjectURL","url_object","newImage","components_ImgUploader","components_PreEditor","Pixelator","components_ColorMapper","components_PatternMaker","target","rel","href","Header","handleMenu","App","src_components_Header","src_components_AppContainer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2TCuFzBC,oNAnFXC,MAAQ,CACJC,MAAOC,EAAKC,MAAMC,aAClBC,YAAY,EACZC,eAAe,EACfC,gBAAiB,OA0BrBC,WAAa,WACJN,EAAKF,MAAMK,aACZH,EAAKO,SAAS,CACVJ,YAAY,EACZC,eAAe,IAEnBI,WAAY,WACRR,EAAKO,SAAS,CAACJ,YAAY,KAC5BH,EAAKF,MAAMO,iBACdG,WAAY,WACRR,EAAKO,SAAS,CAACH,eAAe,KAC/BJ,EAAKF,MAAMO,gBAAkB,IAChCG,WAAY,WACRR,EAAKC,MAAMQ,WACZT,EAAKF,MAAMO,gBAAkB,KAEpC,IAAIK,EAASC,SAASC,eAAeZ,EAAKC,MAAMY,KAAO,QAAQd,MAC/DW,EAASA,EAAOI,MAAM,EAAE,GACxBd,EAAKO,SAAS,CAACR,MAAOW,yFAxCtB,IAAKK,KAAKjB,MAAMK,WAAY,CACxB,IAAIa,EAAMC,SAASF,KAAKjB,MAAMC,OAC1BmB,MAAMF,GACND,KAAKR,SAAS,CAACR,MAAOgB,KAAKd,MAAMC,eAC1Bc,EAAMD,KAAKd,MAAMkB,IACxBJ,KAAKR,SAAS,CAACR,MAAOgB,KAAKd,MAAMkB,MAC1BH,EAAMD,KAAKd,MAAMmB,KACxBL,KAAKR,SAAS,CAACR,MAAOgB,KAAKd,MAAMmB,MAGrC,IAAIC,EAAWV,SAASC,eAAeG,KAAKd,MAAMY,MAAMd,MACpDsB,IAAaN,KAAKjB,MAAMC,QACpBgB,KAAKjB,MAAMM,cACXO,SAASC,eAAeG,KAAKd,MAAMY,MAAMd,MAAQiB,EAEjDD,KAAKR,SAAS,CAACR,MAAOsB,uCA4B7B,IAAAC,EAAAP,KACL,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACVX,KAAKd,MAAM0B,OAEhBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOG,GAAIb,KAAKd,MAAMY,KAAMa,UAAU,eAClCG,KAAK,QAAQC,KAAK,IAClBX,IAAKJ,KAAKd,MAAMkB,IAAKC,IAAKL,KAAKd,MAAMmB,IACrClB,aAAgBa,KAAKd,MAAMC,aAC3B6B,SAAU,WACNT,EAAKrB,MAAMQ,aAGnBc,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACbE,GAAIb,KAAKd,MAAMY,KAAK,OAAQgB,KAAK,SACjCV,IAAKJ,KAAKd,MAAMkB,IAAKC,IAAKL,KAAKd,MAAMmB,IACrCY,UAAU,IACVjC,MAAOgB,KAAKjB,MAAMC,MAClBgC,SAAU,WACNT,EAAKhB,0BA1ER2B,cCsHNC,6MArHXpC,MAAQ,CACJqC,SAAU,IACVC,WAAY,OA6EhBC,qBAAuB,WACnBrC,EAAKO,SAAS,CAAE4B,SAAaxB,SAASC,eAAe,kBAAkBb,QACvEC,EAAKsC,eAGTC,uBAAyB,WACrBvC,EAAKO,SAAS,CAAE6B,WAAezB,SAASC,eAAe,oBAAoBb,QAC3EC,EAAKsC,wFAlFI,IAAAhB,EAAAP,KACLyB,EAAM,IAAIC,MACdD,EAAIE,IAAM3B,KAAKd,MAAM0C,QAErB,IAAIC,EAASjC,SAASC,eAAe,mBACjCiC,EAAMD,EAAOE,WAAW,MAE5BN,EAAIO,OAAS,WACT,IAAIC,EAAaR,EAAIS,OAAOT,EAAIU,MAC5BC,EAAYxC,SAASyC,uBAAuB,mBAAmB,GAC/DJ,EAAa,GACbJ,EAAOM,MAAQC,EAAUE,YACzBT,EAAOK,OAASL,EAAOM,MAAQF,EAC3BJ,EAAOK,OAASE,EAAUG,eAC1BV,EAAOK,OAASE,EAAUG,aAC1BV,EAAOM,MAAQN,EAAOK,OAASD,KAGnCJ,EAAOK,OAASE,EAAUG,aAC1BV,EAAOM,MAAQN,EAAOK,OAASD,EAC3BJ,EAAOM,MAAQC,EAAUE,cACzBT,EAAOM,MAAQC,EAAUE,YACzBT,EAAOK,OAASL,EAAOM,MAAQF,IAIvCH,EAAIU,OAAS,YAAYjC,EAAKxB,MAAMqC,SAAS,MAC7CU,EAAIU,QAAU,YAAYjC,EAAKxB,MAAMsC,WAAW,MAEhDS,EAAIW,UAAU,EAAG,EAAGZ,EAAOM,MAAON,EAAOK,QACzCJ,EAAIY,UAAUjB,EAAK,EAAG,EAAGI,EAAOM,MAAON,EAAOK,QAK9C,IAFA,IAAIS,EAAOb,EAAIc,aAAa,EAAG,EAAGf,EAAOM,MAAON,EAAOK,QAE9CW,EAAI,EAAGA,EAAIF,EAAKG,KAAKC,OAAQF,GAAK,EAChB,IAAnBF,EAAKG,KAAKD,EAAE,IACZF,EAAKG,KAAKD,GAAK,IACfF,EAAKG,KAAKD,EAAE,GAAK,IACjBF,EAAKG,KAAKD,EAAE,GAAK,IACjBF,EAAKG,KAAKD,EAAE,GAAK,KAEjBF,EAAKG,KAAKD,EAAE,GAAK,IAIzBf,EAAIkB,aAAaL,EAAM,EAAG,GAE1BpC,EAAKrB,MAAM+D,cAAc,CACrBC,WAAerB,EAAOsB,YACtBhB,MAAUN,EAAOM,MACjBD,OAAWL,EAAOK,qDAOXkB,GACZpD,KAAKd,MAAM0C,UAAYwB,EAAUxB,UAEhChC,SAASC,eAAe,kBAAkBb,MAAQ,IAClDY,SAASC,eAAe,oBAAoBb,MAAQ,IACpDgB,KAAKR,SAAS,CACV4B,SAAU,IACVC,WAAY,MAEhBrB,KAAKuB,yDAIO,IAAA8B,EAAArD,KAChBsD,OAAOC,iBAAiB,SAAU,WAAKF,EAAK9B,+CAc5C,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYE,GAAG,qBAGrCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,WACAH,EAAAC,EAAAC,cAAC8C,EAAD,CAAQ1D,KAAO,iBACPc,MAAQ,eACRR,IAAM,IACNC,IAAM,MACNX,QAAWM,KAAKsB,qBAChBnC,aAAe,QACvBqB,EAAAC,EAAAC,cAAC8C,EAAD,CAAQ1D,KAAO,mBACPc,MAAQ,iBACRR,IAAM,IACNC,IAAM,MACNX,QAAWM,KAAKwB,uBAChBrC,aAAe,iBA9GnB+B,aCFpBuC,EAAiB,SAAC3B,EAAK4B,GAClBA,GAOD5B,EAAI6B,uBAAwB,EAC5B7B,EAAI8B,0BAA2B,EAC/B9B,EAAI+B,6BAA8B,EAClC/B,EAAIgC,yBAA0B,IAT9BhC,EAAI6B,uBAAwB,EAC5B7B,EAAI8B,0BAA2B,EAC/B9B,EAAI+B,6BAA8B,EAClC/B,EAAIgC,yBAA0B,IA6BtC,SAASC,EAAaC,EAASC,EAASC,EAAOC,EAAOC,EAAKC,GACvD,IAAIC,EAAQC,KAAKC,MAAMH,EAAIF,EAAMC,EAAIF,GACrCF,EAAQS,YACRT,EAAQU,OAAOR,EAAOC,GACtBH,EAAQW,OAAOP,EAAKC,GACpBL,EAAQW,OAAOP,EAAIH,EAAQM,KAAKK,IAAIN,EAAMC,KAAKM,GAAG,GAAGR,EAAIJ,EAAQM,KAAKO,IAAIR,EAAMC,KAAKM,GAAG,IACxFb,EAAQU,OAAON,EAAKC,GACpBL,EAAQW,OAAOP,EAAIH,EAAQM,KAAKK,IAAIN,EAAMC,KAAKM,GAAG,GAAGR,EAAIJ,EAAQM,KAAKO,IAAIR,EAAMC,KAAKM,GAAG,IACxFb,EAAQe,aCyIGC,6MA9KXjG,MAAQ,CACJkG,YAAa,GACbC,QAAS,IACTC,mBAAoB,GACpBC,oBAAqB,GACrBC,MAAO,EACPC,YAAa,GACbC,aAAc,GACdC,UAAW,OAGfC,aAAe,WACX,IAAIC,EAAM9F,SAASC,eAAe,qBAAqBb,MACnD2G,EAAO/F,SAASC,eAAe,sBAAsBb,MACrD4G,EAAU,EACVC,EAAW,EACXR,EAAQpG,EAAKF,MAAMoG,mBAAmBlG,EAAKF,MAAMqG,oBACjDO,IAAS1G,EAAKF,MAAMwG,cACpBM,EAAWF,EACXC,EAAUrB,KAAKuB,KAAKD,EAASR,GAC7BzF,SAASC,eAAe,qBAAqBb,MAAQ4G,GAC9CF,IAAQzG,EAAKF,MAAMuG,cAC1BM,EAAUF,EACVG,EAAWtB,KAAKuB,KAAKF,EAAQP,GAC7BzF,SAASC,eAAe,sBAAsBb,MAAQ6G,GAE1D5G,EAAKO,SAAS,CACV8F,YAAcM,EACdL,aAAeM,IAEnB5G,EAAKsC,wFAGI,IAAAhB,EAAAP,KACLyB,EAAM,IAAIC,MACdD,EAAIE,IAAM3B,KAAKd,MAAM0C,QAErB,IAAIC,EAASjC,SAASC,eAAe,mBACjCkG,EAASnG,SAASc,cAAc,UAChCsF,EAAUpG,SAASc,cAAc,UAErCe,EAAIO,OAAS,WAETH,EAAOM,MAAQV,EAAIU,MACnBN,EAAOK,OAAST,EAAIS,OACpB8D,EAAQ7D,MAAQV,EAAIU,MAHP,GAIb6D,EAAQ9D,OAAST,EAAIS,OAJR,GAKb6D,EAAO5D,MAAQV,EAAIU,MACnB4D,EAAO7D,OAAST,EAAIS,OAEpB,IAAImD,EAAQ5D,EAAIS,OAAOT,EAAIU,MACvB8D,EAAY1B,KAAKuB,KAAKT,EAAM9E,EAAKxB,MAAMoG,oBACvCc,IAAc1F,EAAKxB,MAAMqG,sBACzB7E,EAAKf,SAAS,CACV4F,oBAAqBa,EACrBV,aAAcU,EACdZ,MAAOA,IAEXzF,SAASC,eAAe,sBAAsBb,MAAQuB,EAAKxB,MAAMqG,qBAGrE,IAAItD,EAAMD,EAAOE,WAAW,MACxBmE,EAAOH,EAAOhE,WAAW,MACzBoE,EAAQH,EAAQjE,WAAW,MAC/BmE,EAAKzD,UAAU,EAAG,EAAGsD,EAAO5D,MAAO4D,EAAO7D,QAC1CiE,EAAMC,SAvBO,GAuBU,EAAE3E,EAAIU,MAAOV,EAAIS,QAExC,IAAImE,EAAI9F,EAAKxB,MAAMuG,YACfgB,EAAI/F,EAAKxB,MAAMwG,aAInBQ,EAAO5D,MAAQkE,EACfN,EAAO7D,OAASoE,EAChB7C,EAAeyC,GAAM,GACrBA,EAAKxD,UAAUjB,EAAK,EAAG,EAAG4E,EAAGC,GAG7B/F,EAAKrB,MAAM+D,cAAc,CAACsD,SAAaR,EAAO5C,cAE9CM,EAAe0C,GAAO,GACtBA,EAAMzD,UAAUqD,EAAQ,EAAG,EAAGM,EAAGC,EAvCpB,GAwCO,EAAG7E,EAAIU,MAAOV,EAAIS,QAEtCiE,EAAMK,UAAY,IAElBL,EAAMM,UAAU,SAChBN,EAAMO,aAAe,SACrBP,EAAMQ,KAAO,kBACb5C,EAAaoC,EAAOS,EACRA,IAAUnF,EAAIS,OAAS0E,IACvBA,IAAU,GACtB,IAAIC,EAAWV,EAAMW,YAAYR,GAAGnE,MAAQ,GAC5CgE,EAAMY,UAAY,UAClBZ,EAAMC,SAAS,EACH3E,EAAIS,OAAO,EAAE2E,EAAS,EArDrB,GAuDDA,GACZV,EAAMY,UAAY,UAClBZ,EAAMa,OAAOzC,KAAKM,GAAG,GACrBsB,EAAMc,SAASX,EAAG7E,EAAIS,OAAO,EAAG,GAChCiE,EAAMa,QAAQzC,KAAKM,GAAG,GACtBd,EAAaoC,EAAOS,EACRA,IAAUnF,EAAIS,OAAS0E,IACvBnF,EAAIU,MA9DH,GA8DmBV,EAAIS,OAAS0E,KAE7CC,EAAWV,EAAMW,YAAYT,GAAGlE,MAAQ,GACxCgE,EAAMY,UAAY,UAClBZ,EAAMC,SAlEO,GAkES3E,EAAIU,MAAM,EAAE0E,EAAS,EAC/BpF,EAAIS,OACJ2E,EApEC,IAsEbV,EAAMY,UAAY,UAClBZ,EAAMc,SAASZ,EAvEF,GAuEc5E,EAAIU,MAAM,EAAGV,EAAIS,OAvE/B,IAwEbiE,EAAMC,SAAS,EAAG3E,EAAIS,OAxET,OAyEbuB,EAAe3B,GAAK,GACpBA,EAAIY,UAAUsD,EAAS,EAAG,EAAGvE,EAAIU,MAAOV,EAAIS,oDAIjCkB,GAAW,IAAAC,EAAArD,KACvBA,KAAKd,MAAM0C,UAAYwB,EAAUxB,UAEhCsF,aAAalH,KAAKjB,MAAMkG,aACxBjF,KAAKR,SAAS,CAAEyF,YAAaxF,WAAW,WACpCG,SAASC,eAAe,qBAAqBb,MAAQqE,EAAKtE,MAAMoG,mBAChEvF,SAASC,eAAe,sBAAsBb,MAAQqE,EAAKtE,MAAMqG,oBACjE/B,EAAK7D,SAAS,CACV8F,YAAajC,EAAKtE,MAAMoG,mBACxBI,aAAclC,EAAKtE,MAAMqG,sBAE7B/B,EAAK9B,aACFvB,KAAKjB,MAAMmG,6CAIjB,IAAAiC,EAAAnH,KACL,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYE,GAAG,qBAGrCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,WACAH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBG,KAAK,SACjC9B,MAAM,qCACNoI,QAAS,WACLD,EAAK3H,SAAS,CACVgG,UAAW2B,EAAKpI,MAAMyG,UAAY,QAGlDhF,EAAAC,EAAAC,cAAC8C,EAAD,CAAQ1D,KAAO,qBACPc,MAAQ,sBACJR,IAAM,KACNC,IAAQL,KAAKjB,MAAMsG,MAAQ,EACrBd,KAAKuB,KAAK9F,KAAKjB,MAAMyG,UAAUxF,KAAKjB,MAAMsG,OAC1CrF,KAAKjB,MAAMyG,UACjB9F,QAAWM,KAAKyF,aAChBtG,aAAgBa,KAAKjB,MAAMqG,sBACvC5E,EAAAC,EAAAC,cAAC8C,EAAD,CAAQ1D,KAAO,oBACPc,MAAQ,qBACJR,IAAM,KACNC,IAAQL,KAAKjB,MAAMsG,MAAQ,EACrBrF,KAAKjB,MAAMyG,UACXjB,KAAKuB,KAAK9F,KAAKjB,MAAMyG,UAAUxF,KAAKjB,MAAMsG,OAChD3F,QAAWM,KAAKyF,aAChBtG,aAAgBa,KAAKjB,MAAMoG,8BAxK9BjE,8BCYzBmG,EAAe,SAASC,EAAIC,GAC9B,GAAID,EAAGvE,SAAWwE,EAAGxE,OAAQ,OAAO,EACpC,IAAK,IAAIF,EAAI,EAAGA,EAAIyE,EAAGvE,SAAUF,EAC/B,GAAIyE,EAAGzE,KAAO0E,EAAG1E,GAAI,OAAO,EAE9B,OAAO,GAiBL2E,EAAoB,SAAS/F,EAAKgG,QACbC,IAAnBD,IAA8BA,GAAkB,GAEpD,IAAI5F,EAASjC,SAASc,cAAc,UAChCiH,EAAelG,EAAIU,MAAQV,EAAIS,OAC/B0F,EAAenG,EAAIU,MACnB0F,EAAgBpG,EAAIS,OACxB,GAAIuF,EAAiB,GAAKE,EAAeF,EAAgB,CACvD,IAAIK,EApBiB,SAASzB,EAAGC,EAAGyB,GACtC,IAAIC,EAAe3B,EAAIC,EACnB2B,EAAiB1D,KAAK2D,KAAKH,EAASC,GAGxC,MAAO,CAFUzD,KAAK4D,MAAMH,EAAeC,GAC1B1D,KAAK4D,MAAMF,IAgBXG,CAAmB3G,EAAIU,MAAOV,EAAIS,OAAQuF,GACzDG,EAAeE,EAAS,GACxBD,EAAgBC,EAAS,GAE3BjG,EAAOM,MAAQyF,EACf/F,EAAOK,OAAS2F,EAChB,IAAIQ,EAAkBT,EAAeC,EACjC7D,EAAUnC,EAAOE,WAAW,MAChCiC,EAAQtB,UAAUjB,EAAK,EAAG,EAAGmG,EAAcC,GAK3C,IAJA,IAAIS,EAAoBtE,EAAQpB,aAC5B,EAAG,EAAGgF,EAAcC,GAAe/E,KACnCyF,EAAaD,EAAkBvF,OAASsF,EACxCG,EAAU,GACL3F,EAAI,EAAGA,EAAIyF,EAAkBvF,OAAQF,GAAK0F,EACjDC,EAAQC,KAAKH,EAAkBvI,MAAM8C,EAAGA,EAAI0F,IAE9C,OAAOC,GAKLE,EAAmB,SAASC,EAAOC,GAGrC,IAFA,IAAIC,EAAYC,IACZC,GAAc,EACTlG,EAAI,EAAGA,EAAI+F,EAAU7F,SAAUF,EAAG,CAGzC,IAFA,IAAImG,EAAWJ,EAAU/F,GACrBoG,EAAO,EACFC,EAAI,EAAGA,EAAIP,EAAM5F,SAAUmG,EAClCD,GAAQ1E,KAAK4E,IAAIR,EAAMO,GAAKF,EAASE,GAAI,GAEvCD,EAAOJ,IACTA,EAAYI,EACZF,EAAalG,GAGjB,OAAOkG,GAILK,EAAW,SAASZ,GACtB,GAAuB,IAAnBA,EAAQzF,OAAc,MAAO,GAGjC,IADA,IAAIsG,EAAmB,GACdxG,EAAI,EAAGA,EAAI2F,EAAQ,GAAGzF,SAAUF,EACvCwG,EAAiBZ,KAAK,GAExB,IAAK,IAAI5F,EAAI,EAAGA,EAAI2F,EAAQzF,SAAUF,EAEpC,IADA,IAAI8F,EAAQH,EAAQ3F,GACXqG,EAAI,EAAGA,EAAIP,EAAM5F,SAAUmG,EAClCG,EAAiBH,KAAOP,EAAMO,GAAKG,EAAiBH,KAAOrG,EAAE,GAGjE,OAAOwG,GAmGLC,EAAe,SAAU7H,EAAK8H,GAK9B,OApDW,SAAS9H,EAAK+H,GAC3B,IAAIrH,EAAQV,EAAIU,MACZD,EAAST,EAAIS,OACbuH,EAAgB7J,SAASc,cAAc,UAC3C+I,EAActH,MAAQA,EACtBsH,EAAcvH,OAASA,EACvB,IAAIwH,EAAiBD,EAAc1H,WAAW,MAC9C2H,EAAehH,UAAUjB,EAAK,EAAG,EAAGU,EAAOD,GAe3C,IAVA,IAAIyH,EAAwBD,EAAe9G,aACvC,EAAG,EAAGT,EAAOD,GAAQY,KACrB8G,EAAWzH,EAAQD,EACnBqG,EAAaoB,EAAsB5G,OAAS6G,EAE5CC,EAA2B,IAAIC,kBAC/BH,EAAsB5G,QAGtBgH,EAAgB,IAAID,kBAAkBvB,GACjC1F,EAAI,EAAGA,EAAI8G,EAAsB5G,OAAQF,GAAK0F,EAAY,CAEjE,IAAK,IAAIW,EAAI,EAAGA,EAAIX,IAAcW,EAChCa,EAAcb,GAAKS,EAAsB9G,EAAIqG,GAI/C,IAFA,IACIc,EAAgBR,EADMd,EAAiBqB,EAAeP,IAEjDN,EAAI,EAAGA,EAAIc,EAAcjH,SAAUmG,EAC1CW,EAAyBhH,EAAEqG,GAAKc,EAAcd,GAIlD,IAAIe,EAAmBrK,SAASc,cAAc,UAC9CuJ,EAAiB9H,MAAQA,EACzB8H,EAAiB/H,OAASA,EAC1B,IAAIgI,EAAoBD,EAAiBlI,WAAW,MAEhDoI,EAAQD,EAAkBE,gBAAgBjI,EAAOD,GAIrD,OAHAiI,EAAMrH,KAAKuH,IAAIR,GACfK,EAAkBlH,aAAamH,EAAO,EAAG,GAC1BF,EAAiB9G,YASfmH,CAAS7I,EAnGd,SAAS+G,EAASe,QACpB7B,IAAN6B,IAAiBA,EAAIhF,KAAKnE,IAAI,EAAGoI,EAAQzF,SAW7C,IAPA,IAAIwH,EAAW,EACXC,EAAS,WAEX,OADAD,GAAuB,KAAXA,EAAkB,OAAS,QACrB,QAGhBf,EAAY,GACP3G,EAAI,EAAGA,EAAI0G,IAAK1G,EAAG,CAC1B,IAAI4H,EAAMlG,KAAK4D,MAAMqC,IAAWhC,EAAQzF,QACxCyG,EAAUf,KAAKD,EAAQiC,IAEzB,OAAa,CAIX,IADA,IAAIC,EAAW,GACN7H,EAAI,EAAGA,EAAI0G,IAAK1G,EACvB6H,EAASjC,KAAK,IAEhB,IAAK,IAAI5F,EAAI,EAAGA,EAAI2F,EAAQzF,SAAUF,EAAG,CACvC,IAAI8F,EAAQH,EAAQ3F,GAEpB6H,EADuBhC,EAAiBC,EAAOa,IACpBf,KAAKE,GAGlC,IADA,IAAIgC,GAAY,EACP9H,EAAI,EAAGA,EAAI0G,IAAK1G,EAAG,CAC1B,IAAI+H,EAAUF,EAAS7H,GACnBgI,EAAa,GAEfA,EADED,EAAQ7H,OAAS,EACNqG,EAASwB,GAITpC,EADHjE,KAAK4D,MAAMqC,IAAWhC,EAAQzF,SAG1C4H,EAAYA,GAAatD,EAAawD,EAAYrB,EAAU3G,IAC5D2G,EAAU3G,GAAKgI,EAEjB,GAAIF,EAAW,MAEjB,OAAOnB,EAsDWsB,CADItD,EAAkB/F,EA9LjB,KA+LkB8H,KCzMvCwB,EAAiB,CACrB,IAAK,IAAK,IAAI,SAAK,SAAK,OAAK,OAAK,OAAK,OAAK,IAC5C,OAAK,SAAK,OAAK,OAAK,OAAK,OAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,OAAK,OAAK,OAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC7C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAC9C,IAAK,IAAK,IAAK,IAAK,KAAM,IAAI,SAAK,SAAK,SAAK,SAC7C,KCiDeC,0LAtDP,IAAIlI,EAAO9C,KAAKd,MAAM+L,QAClBC,EAAc,GACdC,EAAS,GAGb,IAAK,IAAIC,KAAOtI,EACZoI,EAAYzC,KAAK,CAAC3F,EAAKsI,GAAL,KACFtI,EAAKsI,GAAL,KACAtI,EAAKsI,GAAL,IACAtI,EAAKsI,GAAL,MACAtI,EAAKsI,GAAL,OAEpBF,EAAYG,KAAK,SAAC5K,EAAG6K,GAAO,OAAOA,EAAE,GAAG7K,EAAE,KAE1C,IAAK,IAAIoC,EAAI,EAAGA,EAAIqI,EAAYnI,OAAQF,IAAK,CACzC,IAAI0I,EAAW,CACXC,gBAAiB,IAAMN,EAAYrI,GAAG,IAG1CsI,EAAO1C,KACHjI,EAAAC,EAAAC,cAAA,MAAI0K,IAAKF,EAAYrI,GAAIlC,UAAU,gBAC/BH,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,OAAK+K,MAAOF,EAAU5K,UAAU,cAC5BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAeuK,EAAYrI,GAAG,MAGlDrC,EAAAC,EAAAC,cAAA,UAAKwK,EAAYrI,GAAG,IACpBrC,EAAAC,EAAAC,cAAA,MAAI+K,MAAO,CAAChF,UAAU,UAAWyE,EAAYrI,GAAG,IAChDrC,EAAAC,EAAAC,cAAA,MAAI+K,MAAO,CAAChF,UAAU,UAAWyE,EAAYrI,GAAG,MAM5D,OACIrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACjBH,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,MAAI+K,MAAO,CAAChF,UAAW,UAAvB,OACAjG,EAAAC,EAAAC,cAAA,MAAI+K,MAAO,CAAChF,UAAW,UAAvB,WAGRjG,EAAAC,EAAAC,cAAA,aACKyK,YAhDCjK,cC4LPwK,6MApLX3M,MAAQ,CACJkG,YAAa,GACbC,QAAS,IACTiG,OAAQ,GACRQ,QAAS,GACTC,aAAc,GACdC,cAAe,GACfZ,QAAS,GACTa,QAAS,MA0HbrG,aAAe,WACXxG,EAAKO,SAAS,CAAE2L,OAASvL,SAASC,eAAe,eAAeb,QAChEC,EAAKsC,wFAzHI,IAAAhB,EAAAP,KACLyB,EAAM,IAAIC,MACdD,EAAIE,IAAM3B,KAAKd,MAAM0C,QAErB,IAAIC,EAASjC,SAASC,eAAe,qBACjCkG,EAASnG,SAASc,cAAc,UAChCoB,EAAMD,EAAOE,WAAW,MACxBmE,EAAOH,EAAOhE,WAAW,MAE7BN,EAAIO,OAAS,WACT,IAAI+J,EAASzC,EAAa7H,EAAKlB,EAAKxB,MAAMoM,QACtCa,EAAS,IAAItK,MACjBsK,EAAOrK,IAAMoK,EAGjBC,EAAOhK,OAAS,WACZH,EAAOM,MAAQ5B,EAAKrB,MAAM+M,UAC1BpK,EAAOK,OAAS3B,EAAKrB,MAAMgN,WAC3BnG,EAAO5D,MAAQ6J,EAAO7J,MACtB4D,EAAO7D,OAAS8J,EAAO9J,OAEvBgE,EAAKxD,UAAUsJ,EAAQ,EAAG,GAO1B,IALA,IAAIG,EAAQjG,EAAKtD,aAAa,EAAG,EAAGoJ,EAAO7J,MAAO6J,EAAO9J,QACrDkK,EAAW,IAAIC,MAAMF,EAAMrJ,KAAKC,QAEhCkI,EAAU,GACVqB,EAAM,EACDzJ,EAAI,EAAGA,EAAIsJ,EAAMrJ,KAAKC,OAAQF,GAAK,EAAG,CAS3C,IARA,IAAI0J,EAAIJ,EAAMrJ,KAAKD,EAAI,GACnB2J,EAAIL,EAAMrJ,KAAKD,EAAI,GACnByI,EAAIa,EAAMrJ,KAAKD,EAAI,GAGnBoG,EAAO,SACPwD,EAAWxD,EACXwB,EAAM,EACDvB,EAAI,EAAGA,EAAI3I,EAAKxB,MAAM4M,QAAQ5I,OAAQmG,GAAK,EAAG,CACnD,IAAIwD,EAAKnM,EAAKxB,MAAM4M,QAAQzC,GAAG,GAC3ByD,EAAKpM,EAAKxB,MAAM4M,QAAQzC,GAAG,GAC3B0D,EAAKrM,EAAKxB,MAAM4M,QAAQzC,GAAG,GAI/B,IAFAuD,GAAYF,EAAEG,IAAKH,EAAEG,IAAOF,EAAEG,IAAKH,EAAEG,IAAOrB,EAAEsB,IAAKtB,EAAEsB,IAEtC3D,IACXA,EAAOwD,EACPhC,EAAMvB,EACFuD,EAAW,GAAG,MAK1B,IAAII,EAAOtM,EAAKxB,MAAM4M,QAAQlB,GAAK,GAC/BqC,EAAOvM,EAAKxB,MAAM4M,QAAQlB,GAAK,GAC/BsC,EAAOxM,EAAKxB,MAAM4M,QAAQlB,GAAK,GAEnC2B,EAASvJ,EAAE,GAAKgK,EAChBT,EAASvJ,EAAE,GAAKiK,EAChBV,EAASvJ,EAAE,GAAKkK,EAChBX,EAASvJ,EAAE,GAAK,IAEhB,IAAImK,EAAQ,GAAKH,EAAOC,EAAOC,EAEzBC,KAAS/B,EASXA,EAAQ+B,GAAR,SARA/B,EAAQ+B,GAAS,CACDC,KAAM1M,EAAKxB,MAAM4M,QAAQlB,GAAK,GAC9B3K,KAAMS,EAAKxB,MAAM4M,QAAQlB,GAAK,GAC9ByC,IAAK3M,EAAKxB,MAAM4M,QAAQlB,GAAK,GAC7B0C,KAAM5M,EAAKxB,MAAM+M,QAAQQ,GACzBc,MAAO,GACvBd,KAMR/L,EAAKf,SAAS,CAACyL,QAASA,IACxBkB,EAAMrJ,KAAKuH,IAAI+B,GAEflG,EAAKlD,aAAamJ,EAAO,EAAG,GAC5B5L,EAAKrB,MAAM+D,cAAc,CACrBoK,SAAatH,EAAO5C,YACpB8H,QAAYA,IAChBxH,EAAe3B,GAAK,GACpBA,EAAIY,UAAUqD,EAAQ,EAAG,EAAGiG,EAAO7J,MAAO6J,EAAO9J,OAC7B,EAAG,EAAGL,EAAOM,MAAON,EAAOK,sDAMlC,IAAAmB,EAAArD,KACjBsN,IAAKC,MClHG,kqaDkHiB,CACrBC,SAAU,SAACC,GACPpK,EAAK7D,SAAS,CAAEmM,QAAS8B,EAAQ3K,KAAK/C,MAAM,KAC5C,IAAI6L,EAAevI,EAAKtE,MAAM4M,QAAQ+B,IAAK,SAACC,GACxC,OAAOA,EAAS5N,MAAM,EAAE,KAE5BsD,EAAK7D,SAAS,CAAEoM,aAAcA,OAItC5L,KAAKR,SAAS,CAACsM,QAASf,+CAKT3H,GAAW,IAAA+D,EAAAnH,KACvBA,KAAKd,MAAM0C,UAAYwB,EAAUxB,UAEhCsF,aAAalH,KAAKjB,MAAMkG,aACxBjF,KAAKR,SAAS,CAAEyF,YAAaxF,WAAW,WACxCG,SAASC,eAAe,eAAeb,MAAQmI,EAAKpI,MAAM8M,cAC1D1E,EAAK3H,SAAS,CAAE2L,OAAQhE,EAAKpI,MAAM8M,gBACnC1E,EAAK5F,aACFvB,KAAKjB,MAAMmG,6CASb,IAAA0I,EAAA5N,KACL,OACIQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYE,GAAG,uBAErCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,WACAH,EAAAC,EAAAC,cAAC8C,EAAD,CAAQ1D,KAAO,cACPc,MAAQ,cACJR,IAAM,IACNC,IAAM,KACNX,QAAWM,KAAKyF,aAChBtG,aAAgBa,KAAKjB,MAAM8M,kBAI/CrL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASG,KAAK,SACvB9B,MAAM,iBACNoI,QAAS,YLzJrC,SAAiByG,GAIb,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAM9K,OAGlB,IAAMiL,GAGTD,EAAcxJ,KAAK4D,MAAM5D,KAAKiG,SAAWwD,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EK6IGG,CAAQL,EAAK7O,MAAM+M,SACnB8B,EAAKrM,eAEjBf,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAASG,KAAK,SACvB9B,MAAM,gBACNoI,QAAS,WACLwG,EAAK1O,MAAM+D,cAAc,CACrBiL,SAAaN,EAAK1O,MAAMgP,cAIxC1N,EAAAC,EAAAC,cAACyN,EAAD,CAASlD,QAASjL,KAAKjB,MAAMkM,mBA3KvB/J,+CE8GXkN,6MAlHXrP,MAAQ,CACJsP,SAAS,KAGbC,OAAS,WACLrP,EAAKO,SAAS,CAAC6O,SAAS,IAExB,IAAIE,EAAM,IAAIC,IAAM,IAAI,KAAK,MACzBC,EAASlK,KAAK2D,KAAK,GAEnBwG,EAAU,CACVC,IAAK,GACLC,OAAQ,GACRC,KAAa,GAAPJ,EACNK,MAAc,GAAPL,GAEPtM,EAAQoM,EAAIQ,SAASC,SAASC,WAAaP,EAAQG,KAAOH,EAAQI,MAClE5M,EAASqM,EAAIQ,SAASC,SAASE,YAAcR,EAAQC,IAAMD,EAAQE,OAGnEO,EAAUvP,SAASc,cAAc,UACrCyO,EAAQhN,MAAQA,EAAQuM,EAAQG,KAAOH,EAAQI,MAC/CK,EAAQjN,OAASA,EAASwM,EAAQC,IAAMD,EAAQE,OACnCO,EAAQpN,WAAW,MACzBqN,WAAWV,EAAQG,KAAK,EAAGH,EAAQC,IAAI,EAC1BxM,IAASuM,EAAQG,KAAK,EAAIH,EAAQI,MAAM,EACxC5M,EAASwM,EAAQC,IAAI,EAAID,EAAQE,OAAO,GAC5D,IAAIS,EAAaF,EAAQhM,UAAU,aAG/BmM,EAAe1P,SAASyC,uBAAuB,gBAAgB,GAC/DkN,EAAe,GACfC,EAAU,IAAI9N,MAClB8N,EAAQ7N,IAAM1C,EAAKC,MAAM0C,QACzB4N,EAAQxN,OAAS,WACb,IAAIyN,EAASC,EAAWF,EAjBT,GAiBgCvQ,EAAKC,MAAMyQ,YACtDC,EAAcH,EAAO,GACrBI,EAAWJ,EAAO,GACtBK,IAAYR,EAAc,CAACS,SAAS,IAAQC,KACxC,SAACnO,GACG0N,EAAe1N,EAAOsB,UAAU,aAEhC,IAAI8M,EAAc9N,EAAMD,EACpBgO,EAAerO,EAAOK,OAAOL,EAAOM,MAAO8N,EAC5CC,EAAchO,IACbgO,EAAchO,EApChB,IAuCF,IAAK,IAAIW,EAAI,EAAGA,EAAI+M,EAAY7M,OAAQF,IACpC0L,EAAI4B,SACAd,EACA,MACA,EACA,EACAlN,EAAQuM,EAAQG,KAAOH,EAAQI,MAC/B5M,EAASwM,EAAQC,IAAMD,EAAQE,OAC/B,GAAG,QAEH/L,EAAI,GACJ0L,EAAI4B,SACAN,EAAShN,GACT,MACA6L,EAAQG,MAAQoB,EAAa/N,EAAO,GAAG,EACtC,IAAKA,EAASwM,EAAQC,IAAMyB,EAC7BlO,EAAO,EACPA,EAAO,EACP,GAAG,QAEXqM,EAAI4B,SACAZ,EACA,MACAb,EAAQG,KACRH,EAAQC,IAAMyB,EACdH,EACAC,EACA,GAAG,QAEP3B,EAAI4B,SACAP,EAAY/M,GACZ,MACA6L,EAAQG,KAAOoB,EAvErB,GAwEMvB,EAAQC,IAAMyB,EACdlO,EAzEN,GA0EMA,EA1EN,GA2EM,GAAG,QAEG,IAANW,GACA6L,EAAQC,IAAMyB,EAAYF,EACzB,IAAKhO,EAASwM,EAAQC,IA/E7B,KAgFMuB,EAAe,IAAKhO,EAAS,IAG7BW,IAAM+M,EAAY7M,OAAS,GAC3BwL,EAAI8B,QAAQ,KAAM,aAG1B9B,EAAI+B,KAAK,sBACTrR,EAAKO,SAAS,CAAC6O,SAAS,gFAM/B,IAAA9N,EAAAP,KACL,OACIQ,EAAAC,EAAAC,cAAA,OAAKG,GAAG,SAASF,UAAWX,KAAKjB,MAAMsP,QAAQ,UAAU,IACrD7N,EAAAC,EAAAC,cAAA,SAAOI,KAAK,SACJ9B,MAAOgB,KAAKjB,MAAMsP,QAAQ,SAAI,eAC9BjH,QAAW,WAAK7G,EAAK+N,oBA7GxBpN,aAsHjBwO,EAAa,SAACjO,EAAK8O,EAAcZ,GACjC,IAAIa,EAAOb,EAAaY,EACpBE,EAAOlM,KAAKuB,KAAKrE,EAAIU,MAAMqO,GAC3BE,EAAOnM,KAAKuB,KAAKrE,EAAIS,OAAOsO,GAG5Bf,EAAS,IAAIpD,MAAMoE,EAAKC,EAAK,GAE7BC,EAAc/Q,SAASc,cAAc,UACzCiQ,EAAYxO,MAAQqO,EAAO,GAC3BG,EAAYzO,OAASsO,EAAO,GAC5B,IAAII,EAAWD,EAAY5O,WAAW,MAClC8O,EARY,EASZC,EATY,EAUZC,EAAY,EAEZtP,EAAIS,OAAST,EAAIU,OACjB0O,GAAWL,EAAK,EAAO/O,EAAIU,MAAMV,EAAIS,OAAQsO,EAAM,EACnDM,GAAU,EACVC,EAAaP,EAAK/O,EAAIS,OAAQsO,EAC9BI,EAASlO,UAAUjB,EAAK,EAAG,EAAGA,EAAIU,MAAOV,EAAIS,OACzB2O,EAAQC,EACPrP,EAAIU,MAAMV,EAAIS,OAAQsO,EAAMA,KAEjDK,GAAU,EACVC,GAAWN,EAAK,EAAO/O,EAAIS,OAAOT,EAAIU,MAAOqO,EAAM,EACnDO,EAAaP,EAAK/O,EAAIU,MAAOqO,EAC7BI,EAASlO,UAAUjB,EAAK,EAAG,EAAGA,EAAIU,MAAOV,EAAIS,OACzB2O,EAAQC,EACRN,EAAO/O,EAAIS,OAAOT,EAAIU,MAAOqO,IAGrD,IAAI,IAAI3N,EAAI,EAAGA,EAAI4N,EAAM5N,IACrB,IAAI,IAAIqG,EAAI,EAAGA,EAAIwH,EAAMxH,IAAK,CAC1B0H,EAASpK,UA9BD,EA+BRoK,EAASI,YAAc,UACvBJ,EAASxB,WAAWyB,EAAShO,EAAEkO,EAAWD,EAAS5H,EAAE6H,EACjCA,EAAWA,GAE/B,IAAIlP,EAASjC,SAASc,cAAc,UACpCmB,EAAOM,MAAQqO,EAAOb,EACtB9N,EAAOK,OAASsO,EAAOb,EACvB,IAAI7N,EAAMD,EAAOE,WAAW,MAC5BD,EAAIsN,WAAWO,EAAY,EAAGa,EAAMA,GACpC,IAAK,IAAIS,EAAK,EAAGA,EAAE1M,KAAA4E,IAAGoH,EAAc,GAAGU,IACnCnP,EAAIsN,YAAa6B,EAAGV,EAAc,GAAGZ,EACzBpL,KAAK4D,MAAM8I,EAAGV,GAAcZ,EACxBA,EAAWA,GAE/B7N,EAAIY,UAAUjB,EAAKoB,EAAE2N,EAAMtH,EAAEsH,EAAMA,EAAMA,EACzBb,EAAY,EACZa,EAAMA,GAEtB1O,EAAI2E,UAAU,SACd3E,EAAI4E,aAAe,SACnB5E,EAAI6E,KAAO,oBACX,IAAK,IAAIsK,EAAK,EAAGA,EAAKV,EAAcU,IAChCnP,EAAImF,SAASgK,EAAG,EACZtB,EAAW,GACVsB,EAAG,IAAKtB,GACb7N,EAAImF,SAASgK,EAAG,GACXA,EAAG,EAAE,IAAKtB,EACXa,EAAOb,EAAW,GAE1BF,EAAO5M,EAAE6N,EAAOxH,EAAI,GAAKrH,EAAOsB,YAKxC2N,GAAUtK,KADVqK,GAAUrK,KAGGA,KACToK,EAASnO,UAAUoO,EAAUpP,EAAIU,MAAMV,EAAIS,OAAQsO,EAAM,EAAG,EAAEA,EAAM,EAAEA,GACtEI,EAASnO,UAAU,EAAGqO,EAASN,EAAM,EAAEA,EAAM,EAAEA,GAC/CI,EAASnM,YACTmM,EAASlM,OAAOmM,EAAQC,EAASN,GACjCI,EAASjM,OAAOkM,EAAUpP,EAAIU,MAAMV,EAAIS,OAAQsO,EAAMM,EAASN,GAC/DI,EAASjM,OAAOkM,EAAUpP,EAAIU,MAAMV,EAAIS,OAAQsO,EAAMM,GACtDF,EAAS7L,WAET6L,EAASnO,UAAU,EAAGqO,EAAUrP,EAAIS,OAAOT,EAAIU,MAAOqO,EAAM,EAAEA,EAAM,EAAEA,GACtEI,EAASnO,UAAUoO,EAASL,EAAM,EAAG,EAAEA,EAAM,EAAEA,GAC/CI,EAASnM,YACTmM,EAASlM,OAAOmM,EAASL,EAAMM,GAC/BF,EAASjM,OAAOkM,EAASL,EAAMM,EAAUrP,EAAIS,OAAOT,EAAIU,MAAOqO,GAC/DI,EAASjM,OAAOkM,EAAQC,EAAUrP,EAAIS,OAAOT,EAAIU,MAAOqO,GACxDI,EAAS7L,UAEb0K,EAAO,GAAKkB,EAAYxN,YAGxB,IADA,IAAI+N,EAAa,IAAI7E,MAAMoE,EAAKC,EAAK,GAC7B7N,EAAI,EAAGA,EAAI4N,EAAM5N,IACrB,IAAI,IAAIqG,EAAI,EAAGA,EAAIwH,EAAMxH,IAAK,CAC1B,IAAIrH,EAASjC,SAASc,cAAc,UACpCmB,EAAOM,MAAQwO,EAAYxO,MAC3BN,EAAOK,OAASyO,EAAYzO,OAC5B,IAAIJ,EAAMD,EAAOE,WAAW,MAC5BD,EAAIY,UAAUiO,EAAa,EAAG,GAC9B7O,EAAIiF,UAAY,kBAChBjF,EAAIsE,SAASyK,EACDC,EACAL,EAAKM,EAAWL,EAAKK,GACjCjP,EAAIiF,UAAY,uBAChBjF,EAAIsE,SAASyK,EAAShO,EAAEkO,EACZD,EAAS5H,EAAE6H,EACXA,EAAWA,GAEnBF,EAASrK,KACT1E,EAAIW,UAAUoO,EAAUpP,EAAIU,MAAMV,EAAIS,OAAQsO,EAAM,EAAG,EAAEA,EAAM,EAAEA,GACjE1O,EAAIW,UAAU,EAAGqO,EAASN,EAAM,EAAEA,EAAM,EAAEA,KAE1C1O,EAAIW,UAAU,EAAGqO,EAAUrP,EAAIS,OAAOT,EAAIU,MAAOqO,EAAM,EAAEA,EAAM,EAAEA,GACjE1O,EAAIW,UAAUoO,EAASL,EAAM,EAAG,EAAEA,EAAM,EAAEA,IAG9CU,EAAWrO,EAAE6N,EAAOxH,EAAI,GAAKrH,EAAOsB,YAI5C,MAAO,CAACsM,EAAQyB,IC5GLC,6MAjIXpS,MAAQ,CACJkG,YAAa,GACbC,QAAS,IACTkM,MAAQ,+EAGC,IAAA7Q,EAAAP,KACLyB,EAAM,IAAIC,MACdD,EAAIE,IAAM3B,KAAKd,MAAM0C,QACrB,IAAIwP,EAAQpR,KAAKjB,MAAMqS,MAEvB3P,EAAIO,OAAS,WACT,IAAIH,EAASjC,SAASC,eAAe,sBACjCkG,EAASnG,SAASc,cAAc,UAChC2Q,EAAkBzR,SAASyC,uBAAuB,2BAA2B,GAEjF0D,EAAO5D,MAAQV,EAAIU,MAAMiP,EACzBrL,EAAO7D,OAAST,EAAIS,OAAOkP,EAC3B,IAAI/L,EAAQ5D,EAAIU,MAAMV,EAAIS,OAEtBmD,EAAM,GACNxD,EAAOM,MAAQkP,EAAgB/O,YAC/BT,EAAOK,OAASL,EAAOM,MAAMkD,IAE7BxD,EAAOK,OAASmP,EAAgB9O,aAChCV,EAAOM,MAAQN,EAAOK,OAAOmD,GAIjC,IAAIvD,EAAMD,EAAOE,WAAW,MACxBmE,EAAOH,EAAOhE,WAAW,MAC7BmE,EAAKzD,UAAU,EAAG,EAAGsD,EAAO5D,MAAO4D,EAAO7D,QAC1CJ,EAAIW,UAAU,EAAG,EAAGZ,EAAOM,MAAON,EAAOK,QAEzCuB,EAAeyC,GAAM,GACrBA,EAAKxD,UAAUjB,EAAK,EAAG,EAAGA,EAAIU,MAAOV,EAAIS,OACrB,EAAG,EAAG6D,EAAO5D,MAAO4D,EAAO7D,QAK/C,IAJA,IAAIiK,EAAQjG,EAAKtD,aAAa,EAAG,EAAGmD,EAAO5D,MAAO4D,EAAO7D,QAAQY,KAE7DmI,EAAU1K,EAAKrB,MAAM+L,QAEhBpI,EAAI,EAAGA,EAAIkD,EAAO5D,MAAOU,GAAKuO,EACnC,IAAK,IAAIlI,EAAI,EAAGA,EAAInD,EAAO7D,OAAQgH,GAAKkI,EAAO,CAC3C,IAAI7E,EAAIJ,EAAM,GAAGtJ,EAAIkD,EAAO5D,MAAM+G,GAAK,GACnCsD,EAAIL,EAAM,GAAGtJ,EAAIkD,EAAO5D,MAAM+G,GAAK,GACnCoC,EAAIa,EAAM,GAAGtJ,EAAIkD,EAAO5D,MAAM+G,GAAK,GACnC8D,EAAQ,GAAKT,EAAIC,EAAIlB,EACrBgG,EAAO,GAEPtE,KAAS/B,IACTqG,EAAOrG,EAAQ+B,GAAR,MAGPzM,EAAKrB,MAAMgP,UACXhI,EAAKa,UAAY,UACjBb,EAAKE,SAASvD,EAAGqG,EAAGkI,EAAOA,IAG/BlL,EAAKa,UAAY,UACjBb,EAAK8K,YAAc,WACbzE,EAAEC,EAAElB,GAAG,EAAI,KAAQ/K,EAAKrB,MAAMgP,UAChChI,EAAK8K,YAAc,WAEvB9K,EAAKkJ,WAAWvM,EAAEqG,EAAGkI,EAAOA,GAEvBvO,EAAEuO,EAAO,KAAO,GAChBlI,EAAEkI,EAAO,KAAO,IACblL,EAAKM,UAAY,EACjBN,EAAKkJ,WAAWvM,EAAEqG,EAAE,GAAGkI,EAAM,GAAGA,IAExClL,EAAKM,UAAY,EAEjBN,EAAKO,UAAU,SACfP,EAAKQ,aAAe,SACpBR,EAAKS,KAAO,qBACN4F,EAAEC,EAAElB,GAAG,EAAI,MAAS/K,EAAKrB,MAAMgP,QACjChI,EAAKa,UAAY,UAEjBb,EAAKa,UAAY,UAGrBb,EAAKe,SAASqK,EACEzO,EAAIuO,EAAM,EACVlI,EAAIkI,EAAM,GAIlC7Q,EAAKf,SAAS,CACV+R,WAAcxL,EAAO5C,YACrBwM,WAAcyB,IAGlB7Q,EAAKrB,MAAM+D,cAAc,CACrBsO,WAAchR,EAAKxB,MAAMwS,WACzB5B,WAAcyB,IAGlB3N,EAAe3B,GAAK,GACpBA,EAAIY,UAAUqD,EAAQ,EAAG,EAAGA,EAAO5D,MAAO4D,EAAO7D,OACzB,EAAG,EAAGL,EAAOM,MAAON,EAAOK,oDAIxCkB,GAAW,IAAAC,EAAArD,KACvBA,KAAKd,MAAM0C,UAAYwB,EAAUxB,SAChC5B,KAAKd,MAAM+L,UAAY7H,EAAU6H,SACjCjL,KAAKd,MAAMgP,UAAY9K,EAAU8K,UAEjChH,aAAalH,KAAKjB,MAAMkG,aACxBjF,KAAKR,SAAS,CAAEyF,YAAaxF,WAAW,WACpC4D,EAAK9B,aACFvB,KAAKjB,MAAMmG,6CAKtB,OACI1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAW,2BACZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAAoBE,GAAG,wBAE7CL,EAAAC,EAAAC,cAAC8Q,EAAD,CAAQ5P,QAAW5B,KAAKjB,MAAMwS,WACtB5B,WAAc3P,KAAKjB,MAAMqS,gBA3HtBlQ,qBCoCZuQ,mLApCF,IAAAxS,EAAAe,KACL,OACIQ,EAAAC,EAAAC,cAAA,OAAKG,GAAG,cACJF,UAAWX,KAAKd,MAAMwS,KAAK,OAAO,IACtClR,EAAAC,EAAAC,cAAA,OAAKG,GAAG,oBACRL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACPgB,IAAKgQ,EAAQ,IACbC,IAAI,SACZpR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,qDACAH,EAAAC,EAAAC,cAACmR,EAAA,EAAD,CAAUC,OAAQ9R,KAAKd,MAAM6S,gBAC5B,SAAAC,GAAiD,IAA/CC,EAA+CD,EAA/CC,aAAcC,EAAiCF,EAAjCE,cAAeC,EAAkBH,EAAlBG,aAC5B,OACI3R,EAAAC,EAAAC,cAAA,MACIuR,EAAa,CACbtR,UAAY,YAAcwR,EAAa,SAAS,MAEhD3R,EAAAC,EAAAC,cAAA,QAAWwR,EAAc,CACrBpR,KAAM,OACND,GAAG,aACHuR,OAAO,UACPpR,SAAU,WAAK/B,EAAKC,MAAMmT,uBAG1BF,EACA3R,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,iCAAwBF,EAAAC,EAAAC,cAAA,WAAxB,wCA1BFQ,aCmHXoR,oNA1GXvT,MAAQ,CACJoD,MAAO,EACPD,OAAQ,EACR+I,QAAS,GACT0E,WAAY,EACZzB,SAAS,EACTwD,KAAM,GACN9P,QAAU,GACVsB,WAAa,GACbqD,SAAW,GACX8G,SAAU,GACVkE,WAAY,MAYhBgB,SAAW,WACP9S,WAAW,WACPR,EAAKO,SAAS,CACVkS,MAAM,KAEX,MAIPW,iBAAmB,SAACG,GAChB,IAAIC,EAAO7S,SAASC,eAAe,cAAc2S,MAAM,GACnDC,IACAxT,EAAKO,SAAS,CAAEoC,QAAU0B,OAAOoP,IAAIC,gBAAgBF,KACrDxT,EAAKsT,eAIbR,eAAiB,SAACS,GACVA,IACAvT,EAAKO,SAAS,CAAEoC,QAAU0B,OAAOoP,IAAIC,gBAAgBH,EAAM,MAC3DvT,EAAKsT,eAIbtP,cAAgB,SAAC2P,GACb3T,EAAKO,SAASoT,sFAlCCxP,GACXA,EAAUyP,WAAa7S,KAAKd,MAAM2T,UAClC7S,KAAKR,SAAS,CACVoC,QAAS,GACT8P,MAAM,qCAkCd,OACIlR,EAAAC,EAAAC,cAAA,OAAKG,GAAG,gBACRL,EAAAC,EAAAC,cAACoS,EAAD,CAAapB,KAAM1R,KAAKjB,MAAM2S,KACdW,iBAAkBrS,KAAKqS,iBACvBN,eAAgB/R,KAAK+R,iBACrCvR,EAAAC,EAAAC,cAAA,OAAKG,GAAG,kBACJF,UAAWX,KAAKjB,MAAM2S,KAAK,GAAG,QAC9BlR,EAAAC,EAAAC,cAAA,OAAKG,GAAG,oBACRL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,kBACAH,EAAAC,EAAAC,cAACqS,EAAD,CAAWnR,QAAW5B,KAAKjB,MAAM6C,QACrBqB,cAAiBjD,KAAKiD,iBAElCzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,kBACAH,EAAAC,EAAAC,cAACsS,EAAD,CAAWpR,QAAW5B,KAAKjB,MAAMmE,WACrBD,cAAiBjD,KAAKiD,iBAElCzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,mBACAH,EAAAC,EAAAC,cAACuS,EAAD,CAAarR,QAAW5B,KAAKjB,MAAMwH,SACvBtD,cAAiBjD,KAAKiD,cACtBgJ,UAAajM,KAAKjB,MAAMoD,MACxB+J,WAAclM,KAAKjB,MAAMmD,OACzB+I,QAAWjL,KAAKjB,MAAMkM,QACtBiD,QAAWlO,KAAKjB,MAAMmP,WAElC1N,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,mBACAH,EAAAC,EAAAC,cAACwS,EAAD,CAActR,QAAW5B,KAAKjB,MAAMsO,SACxBpC,QAAWjL,KAAKjB,MAAMkM,QACtBhI,cAAiBjD,KAAKiD,cACtBiL,QAAWlO,KAAKjB,MAAMmP,WAElC1N,EAAAC,EAAAC,cAAA,OAAKG,GAAG,UACRL,EAAAC,EAAAC,cAAA,4BACoBF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UACzBwS,OAAO,SAASC,IAAI,sBACpBC,KAAK,8BAFO,wBADpB,iBAOA7S,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SACTwS,OAAO,SAASC,IAAI,sBACpBC,KAAK,6BAFT,4BAhGWnS,cC2BZoS,0LAjCF,IAAArU,EAAAe,KACL,OACIQ,EAAAC,EAAAC,cAAA,OAAKG,GAAG,UACJL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXgB,IAAKgQ,EAAQ,IACbC,IAAI,OACJxK,QAAS,WACLnI,EAAKC,MAAMqU,gBAGnB/S,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WACTyG,QAAS,WACLnI,EAAKC,MAAMqU,eAFnB,eAMA/S,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACTwS,OAAO,SAASC,IAAI,sBACpBC,KAAK,qCAFT,SAKA7S,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eACTwS,OAAO,SAASC,IAAI,sBACpBC,KAAK,uCAFT,oBAvBKnS,cCqBNsS,oNAlBbzU,MAAQ,CACN8T,UAAU,KAGZU,WAAa,WACXtU,EAAKO,SAAS,CAACqT,UAAW5T,EAAKF,MAAM8T,oFAIrC,OACErS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+S,EAAD,CAAQF,WAAYvT,KAAKuT,aACzB/S,EAAAC,EAAAC,cAACgT,EAAD,CAAcb,SAAU7S,KAAKjB,MAAM8T,mBAbzB3R,cCOEyS,QACW,cAA7BrQ,OAAOsQ,SAASC,UAEe,UAA7BvQ,OAAOsQ,SAASC,UAEhBvQ,OAAOsQ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxT,EAAAC,EAAAC,cAACuT,EAAD,MAASrU,SAASC,eAAe,SD2H3C,kBAAmBqU,WACrBA,UAAUC,cAAcC,MAAMpE,KAAK,SAAAqE,GACjCA,EAAaC","file":"static/js/main.cd17ee67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.312fffb5.png\";","import React, { Component } from 'react';\r\nimport './Slider.css';\r\n\r\nclass Slider extends Component {\r\n    state = {\r\n        value: this.props.defaultValue,\r\n        textUpdate: false,\r\n        textUpdateEnd: false,\r\n        textUpdateDelay: 800\r\n    }\r\n\r\n    componentDidUpdate () {\r\n        if (!this.state.textUpdate) {\r\n            let val = parseInt(this.state.value);\r\n            if (isNaN(val)){\r\n                this.setState({value: this.props.defaultValue});\r\n            } else if (val < this.props.min) {\r\n                this.setState({value: this.props.min});\r\n            } else if (val > this.props.max) {\r\n                this.setState({value: this.props.max});\r\n            }\r\n\r\n            let elem_val = document.getElementById(this.props.name).value;\r\n            if (elem_val !== this.state.value) {\r\n                if (this.state.textUpdateEnd) {\r\n                    document.getElementById(this.props.name).value = val;\r\n                } else {\r\n                    this.setState({value: elem_val});\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    handleText = () => {\r\n        if (!this.state.textUpdate) {\r\n            this.setState({\r\n                textUpdate: true,\r\n                textUpdateEnd: true\r\n            });\r\n            setTimeout( ()=>{\r\n                this.setState({textUpdate: false});\r\n            }, this.state.textUpdateDelay)\r\n            setTimeout( ()=>{\r\n                this.setState({textUpdateEnd: false});\r\n            }, this.state.textUpdateDelay + 10)\r\n            setTimeout( ()=>{\r\n                this.props.handler();\r\n            }, this.state.textUpdateDelay + 20)\r\n        }\r\n        let valTxt = document.getElementById(this.props.name + \"Text\").value;\r\n        valTxt = valTxt.slice(0,3);\r\n        this.setState({value: valTxt});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Slider\">\r\n            <div className=\"sliderTitle\">\r\n                {this.props.title}\r\n            </div>\r\n            <div className=\"sliderMain\">\r\n                <input id={this.props.name} className=\"SliderSlider\" \r\n                    type=\"range\" step=\"1\"\r\n                    min={this.props.min} max={this.props.max}\r\n                    defaultValue = {this.props.defaultValue}\r\n                    onChange={() => {\r\n                        this.props.handler();\r\n                        }\r\n                } />\r\n                <span className=\"SliderValue\">\r\n                <input className=\"SliderText\"\r\n                    id={this.props.name+\"Text\"} type=\"number\" \r\n                    min={this.props.min} max={this.props.max}\r\n                    maxLength=\"3\"\r\n                    value={this.state.value} \r\n                    onChange={() => {\r\n                        this.handleText();                        \r\n                    }}/>\r\n                    \r\n                </span>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Slider;","import React, { Component } from 'react';\r\nimport Slider from './Slider';\r\n\r\nclass PreEditor extends Component {\r\n    state = {\r\n        contrast: 100,\r\n        saturation: 100\r\n    }\r\n    onImgLoad () {\r\n        var img = new Image();\r\n        img.src = this.props.fileUrl;\r\n\r\n        var canvas = document.getElementById('PreEditorCanvas');\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        img.onload = () => {\r\n            let proportion = img.height/img.width;\r\n            let container = document.getElementsByClassName(\"canvasContainer\")[0];\r\n            if (proportion < 1) {\r\n                canvas.width = container.offsetWidth;\r\n                canvas.height = canvas.width * proportion;\r\n                if (canvas.height > container.offsetHeight) {\r\n                    canvas.height = container.offsetHeight;\r\n                    canvas.width = canvas.height / proportion;\r\n                }\r\n            } else {\r\n                canvas.height = container.offsetHeight;\r\n                canvas.width = canvas.height / proportion;\r\n                if (canvas.width > container.offsetWidth) {\r\n                    canvas.width = container.offsetWidth;\r\n                    canvas.height = canvas.width * proportion;\r\n                }\r\n            }\r\n\r\n            ctx.filter = \"contrast(\"+this.state.contrast+\"%) \";\r\n            ctx.filter += \"saturate(\"+this.state.saturation+\"%) \";\r\n\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n\r\n            /* Make transparent pixels white */\r\n            let imgc = ctx.getImageData(0, 0, canvas.width, canvas.height)\r\n\r\n            for (let i = 0; i < imgc.data.length; i += 4) {\r\n                if (imgc.data[i+3] === 0) {\r\n                    imgc.data[i] = 255;\r\n                    imgc.data[i+1] = 255;\r\n                    imgc.data[i+2] = 255;\r\n                    imgc.data[i+3] = 255;\r\n                } else {\r\n                    imgc.data[i+3] = 255;\r\n                }\r\n            }\r\n\r\n            ctx.putImageData(imgc, 0, 0)\r\n\r\n            this.props.outputHandler({\r\n                \"preEditUrl\" : canvas.toDataURL(),\r\n                \"width\" : canvas.width,\r\n                \"height\" : canvas.height\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.fileUrl !== prevProps.fileUrl)\r\n        {   \r\n            document.getElementById(\"contrastSlider\").value = 100;\r\n            document.getElementById(\"saturationSlider\").value = 100;\r\n            this.setState({ \r\n                contrast: 100,\r\n                saturation: 100\r\n            });\r\n            this.onImgLoad()\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', ()=>{this.onImgLoad()})\r\n    }\r\n\r\n    handleSliderContrast = () => {\r\n        this.setState({ \"contrast\" : document.getElementById(\"contrastSlider\").value});\r\n        this.onImgLoad();\r\n    }\r\n\r\n    handleSliderSaturation = () => {\r\n        this.setState({ \"saturation\" : document.getElementById(\"saturationSlider\").value});\r\n        this.onImgLoad();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"picEditor\">\r\n                <div className=\"canvasContainer\">\r\n                    <canvas className=\"picCanvas\" id=\"PreEditorCanvas\"></canvas>\r\n                </div>\r\n                \r\n                <div className=\"sliderContainer\">\r\n                    <p className=\"sliderBoxTitle\">Options</p>\r\n                    <Slider name = \"contrastSlider\"\r\n                            title = \"Contrast (%)\"\r\n                            min = \"0\"\r\n                            max = \"200\"\r\n                            handler = {this.handleSliderContrast}\r\n                            defaultValue = \"100\" />\r\n                    <Slider name = \"saturationSlider\"\r\n                            title = \"Saturation (%)\"\r\n                            min = \"0\"\r\n                            max = \"200\"\r\n                            handler = {this.handleSliderSaturation}\r\n                            defaultValue = \"100\" />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreEditor;\r\n\r\n\r\n/*\r\nfunction dragAction(img, context, canvas) {\r\n    var currentX = 0;\r\n    var currentY = 0;\r\n    var isDraggable = false;\r\n\r\n    canvas.onmousedown = function(e) {\r\n        var mouseX = e.pageX - this.offsetLeft;\r\n        var mouseY = e.pageY - this.offsetTop;\r\n\r\n        if (mouseX >= (currentX - img.width/2) &&\r\n            mouseX <= (currentX + img.width/2) &&\r\n            mouseY >= (currentY - img.height/2) &&\r\n            mouseY <= (currentY + img.height/2)) {\r\n        isDraggable = true;\r\n        }\r\n    };\r\n    canvas.onmousemove = function(e) {\r\n        if (isDraggable) {\r\n        currentX = e.pageX - this.offsetLeft;\r\n        currentY = e.pageY - this.offsetTop;\r\n        context.fillStyle = '#fff';\r\n        context.fillRect(0,0, canvas.width, canvas.height);\r\n        context.drawImage(img, currentX-(canvas.width/2), currentY-(canvas.height/2),\r\n                                canvas.width, canvas.height);\r\n        }\r\n    };\r\n    canvas.onmouseup = function(e) {\r\n        isDraggable = false;\r\n    };\r\n    canvas.onmouseout = function(e) {\r\n        isDraggable = false;\r\n    };\r\n}\r\n*/","\r\nvar toggleAliasing = (ctx, toggle) => {\r\n    if (!toggle) {\r\n        ctx.imageSmoothingEnabled = false;\r\n        ctx.mozImageSmoothingEnabled = false;\r\n        ctx.webkitImageSmoothingEnabled = false;\r\n        ctx.msImageSmoothingEnabled = false;\r\n        }\r\n    else {\r\n        ctx.imageSmoothingEnabled = true;\r\n        ctx.mozImageSmoothingEnabled = true;\r\n        ctx.webkitImageSmoothingEnabled = true;\r\n        ctx.msImageSmoothingEnabled = true;\r\n    }\r\n}\r\n\r\nfunction shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    return array;\r\n}\r\n\r\nfunction canvas_arrow(context, headlen, fromx, fromy, tox, toy){\r\n    var angle = Math.atan2(toy-fromy,tox-fromx);\r\n    context.beginPath()\r\n    context.moveTo(fromx, fromy);\r\n    context.lineTo(tox, toy);\r\n    context.lineTo(tox-headlen*Math.cos(angle-Math.PI/6),toy-headlen*Math.sin(angle-Math.PI/6));\r\n    context.moveTo(tox, toy);\r\n    context.lineTo(tox-headlen*Math.cos(angle+Math.PI/6),toy-headlen*Math.sin(angle+Math.PI/6));\r\n    context.stroke()\r\n}\r\n\r\nexport {toggleAliasing, shuffle, canvas_arrow}","import React, { Component } from 'react';\r\nimport Slider from './Slider';\r\nimport {toggleAliasing, canvas_arrow} from '../utilities/utilities';\r\n\r\n\r\nclass ImageContainer extends Component {\r\n    state = {\r\n        updateTimer: '',\r\n        timeout: 300,\r\n        defaultHorStitches: 50,\r\n        defaultVertStitches: 50,\r\n        ratio: 1,\r\n        horStitches: 50,\r\n        vertStitches: 50,\r\n        maxSlider: 150\r\n    }\r\n\r\n    handleSlider = () => {\r\n        let hor = document.getElementById(\"horStitchesSlider\").value\r\n        let vert = document.getElementById(\"vertStitchesSlider\").value\r\n        let new_hor = 0;\r\n        let new_vert = 0\r\n        let ratio = this.state.defaultHorStitches/this.state.defaultVertStitches\r\n        if (vert !== this.state.vertStitches) {\r\n            new_vert = vert;\r\n            new_hor = Math.ceil(new_vert*ratio);\r\n            document.getElementById(\"horStitchesSlider\").value = new_hor;\r\n        } else if (hor !== this.state.horStitches) {\r\n            new_hor = hor;\r\n            new_vert = Math.ceil(new_hor/ratio);\r\n            document.getElementById(\"vertStitchesSlider\").value = new_vert;\r\n        }\r\n        this.setState({ \r\n            horStitches : new_hor,\r\n            vertStitches : new_vert,\r\n        });\r\n        this.onImgLoad();\r\n    }\r\n\r\n    onImgLoad () {\r\n        var img = new Image();\r\n        img.src = this.props.fileUrl;\r\n\r\n        var canvas = document.getElementById('PixelatorCanvas');\r\n        var buffer = document.createElement('canvas');\r\n        var buffer2 = document.createElement('canvas');\r\n\r\n        img.onload = () => {\r\n            let margin = 15;\r\n            canvas.width = img.width;\r\n            canvas.height = img.height;\r\n            buffer2.width = img.width + margin;\r\n            buffer2.height = img.height + margin;\r\n            buffer.width = img.width;\r\n            buffer.height = img.height;\r\n\r\n            let ratio = img.height/img.width\r\n            let default_h = Math.ceil(ratio*this.state.defaultHorStitches);\r\n            if (default_h !== this.state.defaultVertStitches) {\r\n                this.setState({\r\n                    defaultVertStitches: default_h,\r\n                    vertStitches: default_h,\r\n                    ratio: ratio\r\n                });\r\n                document.getElementById(\"vertStitchesSlider\").value = this.state.defaultVertStitches;   \r\n            }\r\n\r\n            var ctx = canvas.getContext('2d');\r\n            var ctxb = buffer.getContext('2d');\r\n            var ctxb2 = buffer2.getContext('2d');\r\n            ctxb.clearRect(0, 0, buffer.width, buffer.height);\r\n            ctxb2.fillRect(margin, 0,img.width, img.height);\r\n\r\n            var w = this.state.horStitches;\r\n            var h = this.state.vertStitches\r\n            \r\n            \r\n            \r\n            buffer.width = w;\r\n            buffer.height = h;\r\n            toggleAliasing(ctxb, true);\r\n            ctxb.drawImage(img, 0, 0, w, h);\r\n            \r\n            \r\n            this.props.outputHandler({\"pixelUrl\" : buffer.toDataURL()});\r\n\r\n            toggleAliasing(ctxb2, false);\r\n            ctxb2.drawImage(buffer, 0, 0, w, h, \r\n                        margin, 0, img.width, img.height);\r\n            \r\n            ctxb2.lineWidth = 1.5;\r\n\r\n            ctxb2.textAlign=\"center\"; \r\n            ctxb2.textBaseline = \"bottom\";\r\n            ctxb2.font = \"bold 10pt Arial\";\r\n            canvas_arrow(ctxb2, margin/3, \r\n                        margin/2, img.height + margin/2, \r\n                        margin/2, 0);\r\n            let textSize = ctxb2.measureText(h).width + 10;\r\n            ctxb2.fillStyle = '#ffffff';\r\n            ctxb2.fillRect(0,\r\n                        img.height/2-textSize/2,\r\n                        margin,\r\n                        textSize)\r\n            ctxb2.fillStyle = '#000000';\r\n            ctxb2.rotate(Math.PI/2);\r\n            ctxb2.fillText(h, img.height/2, 0);\r\n            ctxb2.rotate(-Math.PI/2);\r\n            canvas_arrow(ctxb2, margin/3, \r\n                        margin/2, img.height + margin/2, \r\n                        img.width + margin, img.height + margin/2);\r\n            \r\n            textSize = ctxb2.measureText(w).width + 10;\r\n            ctxb2.fillStyle = '#ffffff';\r\n            ctxb2.fillRect(margin+img.width/2-textSize/2,\r\n                        img.height,\r\n                        textSize,\r\n                        margin)\r\n            ctxb2.fillStyle = '#000000';\r\n            ctxb2.fillText(w, margin + img.width/2, img.height + margin);\r\n            ctxb2.fillRect(0, img.height, margin, margin);\r\n            toggleAliasing(ctx, false);\r\n            ctx.drawImage(buffer2, 0, 0, img.width, img.height);\r\n        }        \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.fileUrl !== prevProps.fileUrl)\r\n        {      \r\n            clearTimeout(this.state.updateTimer)\r\n            this.setState({ updateTimer: setTimeout(() => {\r\n                document.getElementById(\"horStitchesSlider\").value = this.state.defaultHorStitches;\r\n                document.getElementById(\"vertStitchesSlider\").value = this.state.defaultVertStitches;\r\n                this.setState({ \r\n                    horStitches: this.state.defaultHorStitches,\r\n                    vertStitches: this.state.defaultVertStitches \r\n                });\r\n                this.onImgLoad();\r\n                }, this.state.timeout)})\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"picEditor\">\r\n                <div className=\"canvasContainer\">\r\n                    <canvas className=\"picCanvas\" id=\"PixelatorCanvas\"></canvas>\r\n                </div>\r\n\r\n                <div className=\"sliderContainer\">\r\n                    <p className=\"sliderBoxTitle\">Options</p>\r\n                    <input className=\"Pixelator button\" type=\"submit\"\r\n                            value=\"More Stitches (warning: may crash)\"\r\n                            onClick={() => {\r\n                                this.setState({\r\n                                    maxSlider: this.state.maxSlider + 50\r\n                                })\r\n                                }} />\r\n                    <Slider name = \"vertStitchesSlider\"\r\n                            title = \"# of Vert. Stitches\"\r\n                                min = \"10\"\r\n                                max = {(this.state.ratio < 1\r\n                                    ? Math.ceil(this.state.maxSlider*this.state.ratio)\r\n                                    : this.state.maxSlider)}\r\n                                handler = {this.handleSlider}\r\n                                defaultValue = {this.state.defaultVertStitches} />\r\n                    <Slider name = \"horStitchesSlider\"\r\n                            title = \"# of Hor. Stitches\"\r\n                                min = \"10\"\r\n                                max = {(this.state.ratio < 1\r\n                                    ? this.state.maxSlider\r\n                                    : Math.ceil(this.state.maxSlider/this.state.ratio))}\r\n                                handler = {this.handleSlider}\r\n                                defaultValue = {this.state.defaultHorStitches} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageContainer\r\n","// *************************************************\r\n// * Adapted from \r\n// * https://github.com/dstein64/k-means-quantization-js\r\n// *************************************************\r\n\r\n\r\n// *************************************************\r\n// * Constants\r\n// *************************************************\r\n\r\nvar MAX_K_MEANS_PIXELS = 50000;\r\n\r\n//*************************************************\r\n//* Image/Data Processing\r\n//*************************************************\r\n\r\n// Checks for equality of elements in two arrays.\r\nvar arrays_equal = function(a1, a2) {\r\n  if (a1.length !== a2.length) return false;\r\n  for (var i = 0; i < a1.length; ++i) {\r\n    if (a1[i] !== a2[i]) return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n// Given width w and height h, rescale the dimensions to satisfy\r\n// the specified number of pixels.\r\nvar rescale_dimensions = function(w, h, pixels) {\r\n  var aspect_ratio = w / h;\r\n  var scaling_factor = Math.sqrt(pixels / aspect_ratio);\r\n  var rescaled_w = Math.floor(aspect_ratio * scaling_factor);\r\n  var rescaled_h = Math.floor(scaling_factor);\r\n  return [rescaled_w, rescaled_h];\r\n};\r\n\r\n// Given an Image, return a dataset with pixel colors.\r\n// If resized_pixels > 0, image will be resized prior to building\r\n// the dataset.\r\n// return: [[R,G,B,a], [R,G,B,a], [R,G,B,a], ...]\r\nvar get_pixel_dataset = function(img, resized_pixels) {\r\n  if (resized_pixels === undefined) resized_pixels = -1;\r\n  // Get pixel colors from a <canvas> with the image\r\n  var canvas = document.createElement(\"canvas\");\r\n  var img_n_pixels = img.width * img.height;\r\n  var canvas_width = img.width;\r\n  var canvas_height = img.height;\r\n  if (resized_pixels > 0 && img_n_pixels > resized_pixels) {\r\n    var rescaled = rescale_dimensions(img.width, img.height, resized_pixels)\r\n    canvas_width = rescaled[0];\r\n    canvas_height = rescaled[1];\r\n  }\r\n  canvas.width = canvas_width;\r\n  canvas.height = canvas_height;\r\n  var canvas_n_pixels = canvas_width * canvas_height;\r\n  var context = canvas.getContext(\"2d\");\r\n  context.drawImage(img, 0, 0, canvas_width, canvas_height);  \r\n  var flattened_dataset = context.getImageData(\r\n      0, 0, canvas_width, canvas_height).data;\r\n  var n_channels = flattened_dataset.length / canvas_n_pixels;\r\n  var dataset = [];\r\n  for (var i = 0; i < flattened_dataset.length; i += n_channels) {\r\n    dataset.push(flattened_dataset.slice(i, i + n_channels));\r\n  }\r\n  return dataset;\r\n};\r\n\r\n// Given a point and a list of neighbor points, return the index\r\n// for the neighbor that's closest to the point.\r\nvar nearest_neighbor = function(point, neighbors) {\r\n  var best_dist = Infinity; // squared distance\r\n  var best_index = -1;\r\n  for (var i = 0; i < neighbors.length; ++i) {\r\n    var neighbor = neighbors[i];\r\n    var dist = 0;\r\n    for (var j = 0; j < point.length; ++j) {\r\n      dist += Math.pow(point[j] - neighbor[j], 2);\r\n    }\r\n    if (dist < best_dist) {\r\n      best_dist = dist;\r\n      best_index = i;\r\n    }\r\n  }\r\n  return best_index;\r\n};\r\n\r\n// Returns the centroid of a dataset.\r\nvar centroid = function(dataset) {\r\n  if (dataset.length === 0) return [];\r\n  // Calculate running means.\r\n  var running_centroid = [];\r\n  for (let i = 0; i < dataset[0].length; ++i) {\r\n    running_centroid.push(0);\r\n  }\r\n  for (let i = 0; i < dataset.length; ++i) {\r\n    var point = dataset[i];\r\n    for (let j = 0; j < point.length; ++j) {\r\n      running_centroid[j] += (point[j] - running_centroid[j]) / (i+1);\r\n    }\r\n  }\r\n  return running_centroid;\r\n};\r\n\r\n// Returns the k-means centroids.\r\nvar k_means = function(dataset, k) {\r\n  if (k === undefined) k = Math.min(3, dataset.length);\r\n  // Use a seeded random number generator instead of Math.random(),\r\n  // so that k-means always produces the same centroids for the same\r\n  // input.\r\n  let rng_seed = 0;\r\n  var random = function() {\r\n    rng_seed = (rng_seed * 9301 + 49297) % 233280;\r\n    return rng_seed / 233280;\r\n  };\r\n  // Choose initial centroids randomly.\r\n  let centroids = [];\r\n  for (var i = 0; i < k; ++i) {\r\n    var idx = Math.floor(random() * dataset.length);\r\n    centroids.push(dataset[idx]);\r\n  }\r\n  while (true) {\r\n    // 'clusters' is an array of arrays. each sub-array corresponds to\r\n    // a cluster, and has the points in that cluster.\r\n    var clusters = [];\r\n    for (let i = 0; i < k; ++i) {\r\n      clusters.push([]);\r\n    }\r\n    for (let i = 0; i < dataset.length; ++i) {\r\n      var point = dataset[i];\r\n      var nearest_centroid = nearest_neighbor(point, centroids);\r\n      clusters[nearest_centroid].push(point);\r\n    }\r\n    var converged = true;\r\n    for (let i = 0; i < k; ++i) {\r\n      var cluster = clusters[i];\r\n      var centroid_i = [];\r\n      if (cluster.length > 0) {\r\n        centroid_i = centroid(cluster);\r\n      } else {\r\n        // For an empty cluster, set a random point as the centroid.\r\n        let idx = Math.floor(random() * dataset.length);\r\n        centroid_i = dataset[idx];\r\n      }\r\n      converged = converged && arrays_equal(centroid_i, centroids[i]);\r\n      centroids[i] = centroid_i;\r\n    }\r\n    if (converged) break;\r\n  }\r\n  return centroids;\r\n};\r\n\r\n// Takes an <img> as input. Returns a quantized data URL.\r\nvar quantize = function(img, centroids) {\r\n  var width = img.width;\r\n  var height = img.height;\r\n  var source_canvas = document.createElement(\"canvas\");\r\n  source_canvas.width = width;\r\n  source_canvas.height = height;\r\n  var source_context = source_canvas.getContext(\"2d\");\r\n  source_context.drawImage(img, 0, 0, width, height);\r\n  \r\n  // flattened_*_data = [R, G, B, a, R, G, B, a, ...] where\r\n  // (R, G, B, a) groups each correspond to a single pixel, and they are\r\n  // column-major ordered.\r\n  var flattened_source_data = source_context.getImageData(\r\n      0, 0, width, height).data;\r\n  var n_pixels = width * height;\r\n  var n_channels = flattened_source_data.length / n_pixels;\r\n  \r\n  var flattened_quantized_data = new Uint8ClampedArray(\r\n      flattened_source_data.length);\r\n  \r\n  // Set each pixel to its nearest color.\r\n  var current_pixel = new Uint8ClampedArray(n_channels);\r\n  for (var i = 0; i < flattened_source_data.length; i += n_channels) {\r\n    // This for loop approach is faster than using Array.slice().\r\n    for (var j = 0; j < n_channels; ++j) {\r\n      current_pixel[j] = flattened_source_data[i + j];\r\n    }\r\n    var nearest_color_index = nearest_neighbor(current_pixel, centroids);\r\n    var nearest_color = centroids[nearest_color_index];\r\n    for (let j = 0; j < nearest_color.length; ++j) {\r\n      flattened_quantized_data[i+j] = nearest_color[j];\r\n    }\r\n  }\r\n  \r\n  var quantized_canvas = document.createElement(\"canvas\");\r\n  quantized_canvas.width = width;\r\n  quantized_canvas.height = height;\r\n  var quantized_context = quantized_canvas.getContext(\"2d\");\r\n  \r\n  var image = quantized_context.createImageData(width, height);\r\n  image.data.set(flattened_quantized_data);\r\n  quantized_context.putImageData(image, 0, 0);\r\n  let data_url = quantized_canvas.toDataURL();\r\n  return data_url;\r\n};\r\n\r\n\r\nvar quantize_img = function (img, k ) {\r\n    // Use a fixed maximum so that k-means works fast.\r\n    var pixel_dataset = get_pixel_dataset(img, MAX_K_MEANS_PIXELS);\r\n    var centroids = k_means(pixel_dataset, k);\r\n    var data_url = quantize(img, centroids);\r\n    return data_url;\r\n};\r\n\r\nexport {quantize_img};","var stitch_symbols = [\r\n\"#\", \"&\", \"*\",\"‡\", \"†\", \"§\", \"×\", \"÷\", \"±\", \"-\",\r\n\"¬\", \"€\", \"£\", \"¤\", \"¥\", \"¢\", \"!\", \"%\", \"$\", \"@\",\r\n\"?\", \"®\", \"æ\", \"Æ\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \r\n\"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \r\n\"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\",\r\n\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\",\r\n\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"z\",\r\n\"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \"~\", \">\", \"<\",  \"]\", \r\n\"[\", \"}\", \"{\", \"|\", \"\\\\\", \"/\",\"♠\", \"♣\", \"♥\", \"♦\",\r\n\"^\"\r\n]\r\n\r\nexport {stitch_symbols};","import React, { Component } from 'react';\r\nimport './Palette.css';\r\n\r\nclass Palette extends Component {\r\n    render() {\r\n        let data = this.props.palette\r\n        let data_sorted = []\r\n        var colors = []\r\n        \r\n\r\n        for (var key in data) {\r\n            data_sorted.push([data[key][\"code\"], \r\n                            data[key][\"name\"], \r\n                            data[key][\"hex\"], \r\n                            data[key][\"count\"],\r\n                            data[key][\"symb\"]]);\r\n        }\r\n        data_sorted.sort((a, b) => {return b[3]-a[3]})\r\n\r\n        for (let i = 0; i < data_sorted.length; i++) {\r\n            let boxStyle = {\r\n                backgroundColor: \"#\" + data_sorted[i][2]\r\n            }\r\n\r\n            colors.push(\r\n                <tr key={data_sorted[i]} className=\"paletteColor\">\r\n                    <td>\r\n                    <div style={boxStyle} className=\"paletteBox\">\r\n                        <span className=\"paletteSymb\">{data_sorted[i][4]}</span>\r\n                    </div>\r\n                    </td>\r\n                    <td>{data_sorted[i][1]}</td>\r\n                    <td style={{textAlign:\"right\"}}>{data_sorted[i][0]}</td>\r\n                    <td style={{textAlign:\"right\"}}>{data_sorted[i][3]}</td>\r\n                </tr>\r\n                \r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"Palette\">\r\n                <table className=\"paletteTable\" >\r\n                <thead>\r\n                    <tr>\r\n                        <th>Color</th>\r\n                        <th>Name</th>\r\n                        <th style={{textAlign: \"right\"}}>DMC</th>\r\n                        <th style={{textAlign: \"right\"}}>Count</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {colors}\r\n                </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Palette;","import React, { Component } from 'react';\r\nimport {toggleAliasing, shuffle} from '../utilities/utilities';\r\nimport Papa from 'papaparse';\r\nimport {quantize_img} from '../utilities/kmeans.js';\r\nimport {rgb_dmc_data} from '../utilities/rgb_to_dmc.js';\r\nimport {stitch_symbols} from '../utilities/symbols.js';\r\nimport Slider from './Slider';\r\nimport Palette from './Palette';\r\n\r\n\r\nclass ColorMapper extends Component {\r\n    state = {\r\n        updateTimer: '',\r\n        timeout: 300,\r\n        colors: 10,\r\n        rgb_dmc: [],\r\n        rgb_dmc_pure: [],\r\n        defaultColors: 10,\r\n        palette: {},\r\n        symbols: []\r\n    }\r\n\r\n    onImgLoad () {\r\n        var img = new Image();\r\n        img.src = this.props.fileUrl;\r\n\r\n        var canvas = document.getElementById('ColorMapperCanvas');\r\n        var buffer = document.createElement('canvas');\r\n        var ctx = canvas.getContext('2d');\r\n        var ctxb = buffer.getContext('2d');\r\n        \r\n        img.onload = () => {\r\n            let src_qt = quantize_img(img, this.state.colors)\r\n            var img_qt = new Image();\r\n            img_qt.src = src_qt;\r\n        \r\n\r\n        img_qt.onload = () => {\r\n            canvas.width = this.props.initWidth;\r\n            canvas.height = this.props.initHeight;\r\n            buffer.width = img_qt.width;\r\n            buffer.height = img_qt.height\r\n\r\n            ctxb.drawImage(img_qt, 0, 0);\r\n               \r\n            let imgdt = ctxb.getImageData(0, 0, img_qt.width, img_qt.height);\r\n            let new_data = new Array(imgdt.data.length);\r\n\r\n            var palette = {};\r\n            let ctr = 0;\r\n            for (let i = 0; i < imgdt.data.length; i += 4) {\r\n                let r = imgdt.data[i + 0];\r\n                let g = imgdt.data[i + 1];\r\n                let b = imgdt.data[i + 2];\r\n\r\n                \r\n                let dist = 99999999;\r\n                let new_dist = dist;\r\n                let idx = 0;\r\n                for (let j = 0; j < this.state.rgb_dmc.length; j += 1) {\r\n                    let rd = this.state.rgb_dmc[j][2];\r\n                    let gd = this.state.rgb_dmc[j][3];\r\n                    let bd = this.state.rgb_dmc[j][4];\r\n\r\n                    new_dist = (r-rd)*(r-rd) + (g-gd)*(g-gd) + (b-bd)*(b-bd);\r\n\r\n                    if (new_dist < dist) {\r\n                        dist = new_dist;\r\n                        idx = j\r\n                        if (new_dist < 2) break;\r\n                    }\r\n\r\n                }\r\n\r\n                let rnew = this.state.rgb_dmc[idx][2];\r\n                let gnew = this.state.rgb_dmc[idx][3];\r\n                let bnew = this.state.rgb_dmc[idx][4];\r\n\r\n                new_data[i+0] = rnew;\r\n                new_data[i+1] = gnew;\r\n                new_data[i+2] = bnew;\r\n                new_data[i+3] = 255;\r\n\r\n                let color = \"\" + rnew + gnew + bnew;\r\n                \r\n                if (!(color in palette)) {\r\n                    palette[color] = {\r\n                                    code: this.state.rgb_dmc[idx][0],\r\n                                    name: this.state.rgb_dmc[idx][1],\r\n                                    hex: this.state.rgb_dmc[idx][5],\r\n                                    symb: this.state.symbols[ctr],\r\n                                    count: 1};\r\n                    ctr++;\r\n                } else {\r\n                    palette[color][\"count\"] ++;\r\n                } \r\n            }\r\n\r\n            this.setState({palette: palette});\r\n            imgdt.data.set(new_data);\r\n\r\n            ctxb.putImageData(imgdt, 0, 0)\r\n            this.props.outputHandler({\r\n                \"colorUrl\" : buffer.toDataURL(),\r\n                \"palette\" : palette});\r\n            toggleAliasing(ctx, false);\r\n            ctx.drawImage(buffer, 0, 0, img_qt.width, img_qt.height, \r\n                                0, 0, canvas.width, canvas.height);\r\n        }\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount () {\r\n        Papa.parse(rgb_dmc_data, {\r\n            complete: (results) => {\r\n                this.setState({ rgb_dmc: results.data.slice(1) })\r\n                let rgb_dmc_pure = this.state.rgb_dmc.map( (subarray) => {\r\n                    return subarray.slice(2,5);\r\n                })\r\n                this.setState({ rgb_dmc_pure: rgb_dmc_pure });\r\n            }\r\n        });\r\n\r\n        this.setState({symbols: stitch_symbols});\r\n\r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.fileUrl !== prevProps.fileUrl)\r\n        {   \r\n            clearTimeout(this.state.updateTimer)\r\n            this.setState({ updateTimer: setTimeout(() => {\r\n            document.getElementById(\"colorSlider\").value = this.state.defaultColors;\r\n            this.setState({ colors: this.state.defaultColors});\r\n            this.onImgLoad();\r\n            }, this.state.timeout)})\r\n        }\r\n    }\r\n\r\n    handleSlider = () => {\r\n        this.setState({ colors : document.getElementById(\"colorSlider\").value});\r\n        this.onImgLoad();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"picEditor ColorMapper\">\r\n                <div className=\"colorMapperEditor\">\r\n                    <div className=\"canvasContainer\">\r\n                        <canvas className=\"picCanvas\" id=\"ColorMapperCanvas\"></canvas>\r\n                    </div>\r\n                    <div className=\"sliderContainer\">\r\n                        <p className=\"sliderBoxTitle\">Options</p>\r\n                        <Slider name = \"colorSlider\" \r\n                                title = \"# of Colors\"\r\n                                    min = \"2\"\r\n                                    max = \"90\"\r\n                                    handler = {this.handleSlider}\r\n                                    defaultValue = {this.state.defaultColors} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"colorMapperPalette\">\r\n                    <p className=\"paletteBoxTitle\">Palette</p>\r\n                    <div className=\"buttonContainer\">\r\n                    <input className=\"button\" type=\"submit\"\r\n                            value=\"Change Symbols\"\r\n                            onClick={() => {\r\n                                shuffle(this.state.symbols);\r\n                                this.onImgLoad();\r\n                                }} />\r\n                    <input className=\"button\" type=\"submit\"\r\n                            value=\"Toggle Colors\"\r\n                            onClick={() => {\r\n                                this.props.outputHandler({\r\n                                    'nocolor' : !this.props.nocolor\r\n                                })\r\n                                }} />\r\n                    </div>\r\n                    <Palette palette={this.state.palette} />\r\n                </div>\r\n                \r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorMapper;\r\n","var rgb_dmc_data = `\r\nDMC,Name,RED,GRN,BLU,#RGB\r\n000,blanc White,255,255,255,FFFFFF\r\n208,Lavender-VY DK,148,91,128,945B80\r\n209,Lavender-DK,206,148,186,CE94BA\r\n210,Lavender-MD,236,207,225,ECCFE1\r\n211,Lavender-LT,243,218,228,F3DAE4\r\n221,Shell Pink-VY DK,156,41,74,9C294A\r\n223,Shell Pink-LT,219,128,115,DB8073\r\n224,Shell Pink-VY LT,255,199,176,FFC7B0\r\n225,Shell Pink-ULT VY L,255,240,228,FFF0E4\r\n300,Mahogany-VY DK,143,57,38,8F3926\r\n301,Mahogany-MD,209,102,84,D16654\r\n304,Christmas Red-MD,188,0,97,BC0061\r\n307,Lemon,255,231,109,FFE76D\r\n309,Rose-DP,214,43,91,D62B5B\r\n310,Black,0,0,0,000000\r\n311,Navy Blue-MD,0,79,97,004F61\r\n312,Navy Blue-LT,58,84,103,3A5467\r\n315,Antique Mauve-VY DK,163,90,91,A35A5B\r\n316,Antique Mauve-MD,220,141,141,DC8D8D\r\n317,Pewter Grey,167,139,136,A78B88\r\n318,Steel Grey - LT,197,198,190,C5C6BE\r\n319,Pistachio Grn-VY DK,85,95,82,555F52\r\n320,Pistachio Green-MD,138,153,120,8A9978\r\n321,Christmas Red,231,18,97,E71261\r\n322,Navy Blue-VY LT,81,109,135,516D87\r\n326,Rose-VY DP,188,22,65,BC1641\r\n327,Violet-DK,61,0,103,3D0067\r\n333,Blue Violet-VY DK,127,84,130,7F5482\r\n334,Baby Blue-MD,115,140,170,738CAA\r\n335,Rose,219,36,79,DB244F\r\n336,Navy Blue,36,73,103,244967\r\n340,Blue Violet-MD,162,121,164,A279A4\r\n341,Blue Violet-LT,145,180,197,91B4C5\r\n347,Salmon-VY DK,194,36,67,C22443\r\n349,Coral-DK,220,61,91,DC3D5B\r\n350,Coral-MD,237,69,90,ED455A\r\n351,Coral,255,128,135,FF8087\r\n352,Coral-LT,255,157,144,FF9D90\r\n353,Peach Flesh,255,196,184,FFC4B8\r\n355,Terra Cotta-DK,189,73,47,BD492F\r\n356,Terra Cotta-MD,226,114,91,E2725B\r\n367,Pistachio Green-DK,95,112,91,5F705B\r\n368,Pistachio Green-LT,181,206,162,B5CEA2\r\n369,Pistachio Grn-VY LT,243,250,209,F3FAD1\r\n370,Mustard - MD,184,138,87,B88A57\r\n371,Mustard,196,155,100,C49B64\r\n372,Mustard - LT,203,162,107,CBA26B\r\n400,Mahogany-DK,157,60,39,9D3C27\r\n402,Mahogany-VY LT,255,190,164,FFBEA4\r\n407,Sportsman Flsh-VY D,194,101,76,C2654C\r\n413,Pewter Grey - DK,109,95,95,6D5F5F\r\n414,Steel Grey - DK,167,139,136,A78B88\r\n415,Pearl Grey,221,221,218,DDDDDA\r\n420,Hazel Nut Brown-DK,140,91,43,8C5B2B\r\n422,Hazel Nut Brown-LT,237,172,123,EDAC7B\r\n433,Brown-MD,151,84,20,975414\r\n434,Brown-LT,178,103,70,B26746\r\n435,Brown-VY LT,187,107,57,BB6B39\r\n436,Tan,231,152,115,E79873\r\n437,Tan-LT,238,171,121,EEAB79\r\n444,Lemon-DK,255,176,0,FFB000\r\n445,Lemon-LT,255,255,190,FFFFBE\r\n451,Shell Grey - DK,179,151,143,B3978F\r\n452,Shell Grey - MD,210,185,175,D2B9AF\r\n453,Shell Grey - LT,235,207,185,EBCFB9\r\n469,Avocado Green,116,114,92,74725C\r\n470,Avocado Green-LT,133,143,108,858F6C\r\n471,Avocado Green-VY LT,176,187,140,B0BB8C\r\n472,Avocado Green-ULT L,238,255,182,EEFFB6\r\n498,Christmas Red-LT,187,0,97,BB0061\r\n500,Blue Green-VY DK,43,57,41,2B3929\r\n501,Blue Green-DK,67,85,73,435549\r\n502,Blue Green,134,158,134,869E86\r\n503,Blue Green-MD,195,206,183,C3CEB7\r\n504,Blue Green-LT,206,221,193,CEDDC1\r\n517,Wedgewood-MD,16,127,135,107F87\r\n518,Wedgewood-LT,102,148,154,66949A\r\n519,Sky Blue,194,209,207,C2D1CF\r\n520,Fern Green-DK,55,73,18,374912\r\n522,Fern Green,159,169,142,9FA98E\r\n523,Fern Green-LT,172,183,142,ACB78E\r\n524,Fern Green-VY LT,205,182,158,CDB69E\r\n535,Ash Grey - VY LT,85,85,89,555559\r\n543,Beige Brown-UL VY L,239,214,188,EFD6BC\r\n550,Violet-VY LT,109,18,97,6D1261\r\n552,Violet-MD,146,85,130,925582\r\n553,Violet,160,100,146,A06492\r\n554,Violet-LT,243,206,225,F3CEE1\r\n561,Jade-VY DK,59,96,76,3B604C\r\n562,Jade-MD,97,134,97,618661\r\n563,Jade-LT,182,212,180,B6D4B4\r\n564,Jade-VY LT,214,230,204,D6E6CC\r\n580,Moss Green-DK,0,103,0,006700\r\n581,Moss Green,151,152,49,979831\r\n597,Turquoise,128,151,132,809784\r\n598,Turquoise-LT,208,223,205,D0DFCD\r\n600,Cranberry-VY DK,208,57,106,D0396A\r\n601,Cranberry-DK,222,57,105,DE3969\r\n602,Cranberry-MD,231,84,122,E7547A\r\n603,Cranberry,255,115,140,FF738C\r\n604,Cranberry-LT,255,189,202,FFBDCA\r\n605,Cranberry-VY LT,255,207,214,FFCFD6\r\n606,Bright Orange-Red,255,0,0,FF0000\r\n608,Bright Orange,255,91,0,FF5B00\r\n610,Drab Brown - VY DK,151,104,84,976854\r\n611,Drab Brown - DK,158,109,91,9E6D5B\r\n612,Drab Brown - MD,203,152,103,CB9867\r\n613,Drab Brown - LT,219,176,122,DBB07A\r\n632,Negro Flesh-MD,162,77,52,A24D34\r\n640,Beige Grey - VY DK,163,163,157,A3A39D\r\n642,Beige Grey - DK,174,176,170,AEB0AA\r\n644,Beige Grey-MD,224,224,215,E0E0D7\r\n645,Beaver Grey - VY DK,113,113,113,717171\r\n646,Beaver Grey-DK,121,121,121,797979\r\n647,Beaver Grey - MD,190,190,185,BEBEB9\r\n648,Beaver Grey-LT,202,202,202,CACACA\r\n666,Christmas Red-LT,213,39,86,D52756\r\n676,Old Gold-LT,255,206,158,FFCE9E\r\n677,Old Gold-VY LT,255,231,182,FFE7B6\r\n680,Old Gold-DK,209,140,103,D18C67\r\n699,Chirstmas Green,0,91,6,005B06\r\n700,Christmas Green-BRT,0,96,47,00602F\r\n701,Christmas Green-LT,79,108,69,4F6C45\r\n702,Kelly Green,79,121,66,4F7942\r\n703,Chartreuse,121,144,76,79904C\r\n704,Chartreuse-BRT,165,164,103,A5A467\r\n712,Cream,245,240,219,F5F0DB\r\n718,Plum,219,55,121,DB3779\r\n720,Orange Spice-DK,200,36,43,C8242B\r\n721,Orange Spice-MD,255,115,97,FF7361\r\n722,Orange Spice-LT,255,146,109,FF926D\r\n725,Topaz,255,200,124,FFC87C\r\n726,Topaz-LT,255,224,128,FFE080\r\n727,Topaz-VY LT,255,235,168,FFEBA8\r\n729,Old Gold-MD,243,176,128,F3B080\r\n730,Olive Green-VY DK,132,102,0,846600\r\n731,Olive Green-DK,140,103,0,8C6700\r\n732,Olive Green,145,104,0,916800\r\n733,Olive Green-MD,206,155,97,CE9B61\r\n734,Olive Green-LT,221,166,107,DDA66B\r\n738,Tan-VY LT,244,195,139,F4C38B\r\n739,Tan-ULT VY LT,244,233,202,F4E9CA\r\n740,Tangerine,255,131,19,FF8313\r\n741,Tangerine-MD,255,142,4,FF8E04\r\n742,Tangerine-LT,255,183,85,FFB755\r\n743,Yellow-MD,255,230,146,FFE692\r\n744,Yellow-PALE,255,239,170,FFEFAA\r\n745,Yellow-LT PALE,255,240,197,FFF0C5\r\n746,Off White,246,234,219,F6EADB\r\n747,Sky Blue-VY LT,240,247,239,F0F7EF\r\n754,Peach Flesh-LT,251,227,209,FBE3D1\r\n758,Terra Cotta-VY LT,255,177,147,FFB193\r\n760,Salmon,249,160,146,F9A092\r\n761,Salmon-LT,255,201,188,FFC9BC\r\n762,Pearl Grey - VY LT,232,232,229,E8E8E5\r\n772,Pine Green--LT,231,249,203,E7F9CB\r\n775,Baby Blue-VY LT,247,246,248,F7F6F8\r\n776,Pink-MD,255,177,174,FFB1AE\r\n778,Antique Mauve-VY LT,255,199,184,FFC7B8\r\n780,Topaz-ULT VY DK,181,98,46,B5622E\r\n781,Topaz-VY DK,181,107,56,B56B38\r\n782,Topaz-DK,204,119,66,CC7742\r\n783,Topaz-MD,225,146,85,E19255\r\n791,Cornflower Blue-VYD,71,55,93,47375D\r\n792,Cornflower Blue-DK,97,97,128,616180\r\n793,Cornflower Blue-MD,147,139,164,938BA4\r\n794,Cornflower Blue-LT,187,208,218,BBD0DA\r\n796,Royal Blue-DK,30,58,95,1E3A5F\r\n797,Royal Blue,30,66,99,1E4263\r\n798,Delft-DK,103,115,141,67738D\r\n799,Delft-MD,132,156,182,849CB6\r\n800,Delft-PALE,233,238,233,E9EEE9\r\n801,Coffee Brown-DK,123,71,20,7B4714\r\n806,Peacock Blue-DK,30,130,133,1E8285\r\n807,Peacock Blue,128,167,160,80A7A0\r\n809,Delft,190,193,205,BEC1CD\r\n813,Blue-LT,175,195,205,AFC3CD\r\n814,Garnet-DK,162,0,88,A20058\r\n815,Garnet-MD,166,0,91,A6005B\r\n816,Garnet,179,0,91,B3005B\r\n817,Coral Red-VY DK,219,24,85,DB1855\r\n818,Baby Pink,255,234,235,FFEAEB\r\n819,Baby Pink-LT,248,247,221,F8F7DD\r\n820,Royal Blue-VY DK,30,54,85,1E3655\r\n822,Beige Grey-LT,242,234,219,F2EADB\r\n823,Navy Blue-DK,0,0,73,000049\r\n824,Blue-VY DK,71,97,116,476174\r\n825,Blue-DK,85,108,128,556C80\r\n826,Blue-MD,115,138,153,738A99\r\n827,Blue-VY LT,213,231,232,D5E7E8\r\n828,Blue-ULT VY LT,237,247,238,EDF7EE\r\n829,Golden Olive-VY DK,130,90,8,825A08\r\n830,Golden Olive-DK,136,95,18,885F12\r\n831,Golden Olive-MD,144,103,18,906712\r\n832,Golden Olive,178,119,55,B27737\r\n833,Golden Olive-LT,219,182,128,DBB680\r\n834,Golden Olive-VY LT,242,209,142,F2D18E\r\n838,Beige Brown-VY DK,94,56,27,5E381B\r\n839,Beige Brown-DK,109,66,39,6D4227\r\n840,Beige Brown-MD,128,85,30,80551E\r\n841,Beige Brown-LT,188,134,107,BC866B\r\n842,Beige Brown-VY LT,219,194,164,DBC2A4\r\n844,Beaver Brown -ULT D,107,103,102,6B6766\r\n868,Hazel Nut Brown-VYD,153,92,48,995C30\r\n869,Hazel Nut Brn-VY DK,153,92,48,995C30\r\n890,Pistachio Grn-ULT D,79,86,76,4F564C\r\n891,Carnation-DK,241,49,84,F13154\r\n892,Carnation-MD,249,90,97,F95A61\r\n893,Carnation-LT,243,149,157,F3959D\r\n894,Carnation-VY LT,255,194,191,FFC2BF\r\n895,Hunter Green-VY DK,89,92,78,595C4E\r\n898,Coffee Brown-VY DK,118,55,19,763713\r\n899,Rose-MD,233,109,115,E96D73\r\n900,Burnt Orange-DK,206,43,0,CE2B00\r\n902,Granet-VY DK,138,24,77,8A184D\r\n904,Parrot Green-VY DK,78,95,57,4E5F39\r\n905,Parrot Green-DK,98,119,57,627739\r\n906,Parrot Green-MD,143,163,89,8FA359\r\n907,Parrot Green-LT,185,200,102,B9C866\r\n909,Emerald Green-VY DK,49,105,85,316955\r\n910,Emerald Green-DK,48,116,91,30745B\r\n911,Emerald Green-MD,49,128,97,318061\r\n912,Emerald Green-LT,115,158,115,739E73\r\n913,Nile Green-MD,153,188,149,99BC95\r\n915,Plum-DK,170,24,91,AA185B\r\n917,Plum-MD,171,22,95,AB165F\r\n918,Red Copper-DK,168,68,76,A8444C\r\n919,Red Copper,180,75,82,B44B52\r\n920,Copper-MD,197,94,88,C55E58\r\n921,Copper,206,103,91,CE675B\r\n922,Copper-LT,237,134,115,ED8673\r\n924,Grey Green--VY DK,86,99,100,566364\r\n926,Grey Green-LT,96,116,115,607473\r\n927,Grey Green-LT,200,198,194,C8C6C2\r\n928,Grey Green--VY LT,225,224,216,E1E0D8\r\n930,Antique Blue-DK,102,122,140,667A8C\r\n931,Antique Blue-MD,124,135,145,7C8791\r\n932,Antique Blue-LT,182,186,194,B6BAC2\r\n934,Black Avocado Green,62,59,40,3E3B28\r\n935,Avocado Green-DK,67,63,47,433F2F\r\n936,Avocado Green--VY D,69,69,49,454531\r\n937,Avocado Green-MD,73,86,55,495637\r\n938,Coffee Brown-ULT DK,99,39,16,632710\r\n939,Navy Blue-Vy DK,0,0,49,000031\r\n943,Aquamarine-MD,0,162,117,00A275\r\n945,Flesh-MD,255,206,164,FFCEA4\r\n946,Burnt Orange-MD,244,73,0,F44900\r\n947,Burnt Orange,255,91,0,FF5B00\r\n948,Peach Flesh-VY LT,255,243,231,FFF3E7\r\n950,Sportsman Flesh,239,162,127,EFA27F\r\n951,Flesh,255,229,188,FFE5BC\r\n954,Nile Green,170,213,164,AAD5A4\r\n955,Nile Green-LT,214,230,204,D6E6CC\r\n956,Geranium,255,109,115,FF6D73\r\n957,Gernanium-PALE,255,204,208,FFCCD0\r\n958,Sea Green-DK,0,160,130,00A082\r\n959,Sea Green-MD,171,206,177,ABCEB1\r\n961,Dusty Rose-DK,243,108,123,F36C7B\r\n962,Dusty Rose-MD,253,134,141,FD868D\r\n963,Dusty Rose-ULT VY L,,233,233,FFE9E9\r\n964,Sea Green-LT,208,224,210,D0E0D2\r\n966,Baby Green-MD,206,213,176,CED5B0\r\n970,Pumpkin-LT,255,117,24,FF7518\r\n971,Pumpkin,255,106,0,FF6A00\r\n972,Canary-DP,255,146,0,FF9200\r\n973,Canary-BRT,255,194,67,FFC243\r\n975,Golden Brown-DK,158,67,18,9E4312\r\n976,Golden Brown-MD,246,141,57,F68D39\r\n977,Golden Brown-LT,255,164,73,FFA449\r\n986,Forest Green-VY DK,58,82,65,3A5241\r\n987,Forest Green-DK,83,97,73,536149\r\n988,Forest Green-MD,134,145,110,86916E\r\n989,Forest Green,134,153,110,86996E\r\n991,Aquamarine-DK,47,91,73,2F5B49\r\n992,Aquamarine,146,183,165,92B7A5\r\n993,Aquamarine-LT,192,224,200,C0E0C8\r\n995,Electric Blue-DK,0,123,134,007B86\r\n996,Electric Blue-MD,170,222,225,AADEE1\r\n3011,Khaki Green-DK,123,91,64,7B5B40\r\n3012,Khaki Green-MD,170,134,103,AA8667\r\n3013,Khaki Green-LT,208,195,164,D0C3A4\r\n3021,Brown Grey - VY DK,115,91,93,735B5D\r\n3022,Brown Grey - MD,172,172,170,ACACAA\r\n3023,Brown Grey - LT,198,190,173,C6BEAD\r\n3024,Brown Grey - VY LT,210,208,205,D2D0CD\r\n3031,Mocha Brown-VY DK,84,56,23,543817\r\n3032,Mocha Brown-MD,188,156,120,BC9C78\r\n3033,Mocha Brown-VY LT,239,219,190,EFDBBE\r\n3041,Antique Violet-MD,190,155,167,BE9BA7\r\n3042,Antique Violet-LT,225,205,200,E1CDC8\r\n3045,Yellow Beige-DK,216,151,105,D89769\r\n3046,Yellow Beige-MD,229,193,139,E5C18B\r\n3047,Yellow Beige-LT,255,236,211,FFECD3\r\n3051,Green Grey-DK,85,73,0,554900\r\n3052,Green Grey--MD,137,141,114,898D72\r\n3053,Green Grey,187,179,148,BBB394\r\n3064,Sportsman Flsh-VY D,194,101,76,C2654C\r\n3072,Beaver Grey - VY LT,233,233,223,E9E9DF\r\n3078,Golden Yellow-VY LT,255,255,220,FFFFDC\r\n3325,Baby Blue-LT,202,226,229,CAE2E5\r\n3326,Rose-LT,255,157,150,FF9D96\r\n3328,Salmon-DK,188,64,85,BC4055\r\n3340,Apricot-MD,255,123,103,FF7B67\r\n3341,Apricot,255,172,162,EBACA2\r\n3345,Hunter Green-DK,97,100,82,616452\r\n3346,Hunter Green,120,134,107,78866B\r\n3347,Yellow Green-MD,128,152,115,809873\r\n3348,Yellow Green-LT,225,249,190,E1F9BE\r\n3350,Dusty Rose-ULT DK,201,79,91,C94F5B\r\n3354,Dusty Rose-LT,255,214,209,FFD6D1\r\n3362,Pine Green-DK,96,95,84,605F54\r\n3363,Pine Green-MD,116,127,96,747F60\r\n3364,Pine Green,161,167,135,A1A787\r\n3371,Black Brown,83,37,16,532510\r\n3607,Plum-LT,231,79,134,E74F86\r\n3608,Plum-VY LT,247,152,182,F798B6\r\n3609,Plum-ULT LT,255,214,229,FFD6E5\r\n3685,Mauve-DK,161,53,79,A1354F\r\n3687,Mauve,203,78,97,CB4E61\r\n3688,Mauve-MD,250,151,144,FA9790\r\n3689,Mauve-LT,255,213,216,FFD5D8\r\n3705,Melon-DK,255,85,91,FF555B\r\n3706,Melon-MD,255,128,109,FF806D\r\n3708,Melon-LT,254,212,219,FED4DB\r\n3712,Salmon-MD,230,101,107,E6656B\r\n3713,Salmon-VY LT,253,229,217,FDE5D9\r\n3716,Dusty Rose-VY LT,255,211,212,FFD3D4\r\n3721,Shell Pink-DK,184,75,77,B84B4D\r\n3722,Shell Pink-MD,184,89,88,B85958\r\n3726,Antique Mauve-DK,195,118,123,C3767B\r\n3727,Antique Mauve-LT,255,199,196,FFC7C4\r\n3731,Dusty Rose-VY DK,209,93,103,D15D67\r\n3733,Dusty Rose,255,154,148,FF9A94\r\n3740,Antique Violet-DK,156,125,133,9C7D85\r\n3743,Antique Violet-VY L,235,235,231,EBEBE7\r\n3746,Blue Violet-DK,149,102,162,9566A2\r\n3747,Blue Violet-VY LT,230,236,232,E6ECE8\r\n3750,Antique Blue-VY DK,12,91,108,0C5B6C\r\n3752,Antique Blue-VY LT,194,209,206,C2D1CE\r\n3753,Ant. Blue-ULT VY LT,237,247,247,EDF7F7\r\n3755,Baby Blue,158,176,206,9EB0CE\r\n3756,Baby Blue-ULT VY LT,248,248,252,F8F8FC\r\n3760,Wedgewood,102,142,152,668E98\r\n3761,Sky Blue-LT,227,234,230,E3EAE6\r\n3765,Peacock Blue-VY DK,24,128,134,188086\r\n3766,Peacock Blue-LT,24,101,111,18656F\r\n3768,Grey Green-DK,92,110,108,5C6E6C\r\n3770,Flesh-VY LT,255,250,224,FFFAE0\r\n3772,Negro Flesh,173,83,62,AD533E\r\n3773,Sportsman Flsh-MD,231,134,103,E78667\r\n3774,Sportsman Flsh-VY L,255,220,193,FFDCC1\r\n3776,Mahogony-LT,221,109,91,DD6D5B\r\n3777,Terra Cotta-VY DK,191,64,36,BF4024\r\n3778,Terra Cotta-LT,237,122,100,ED7A64\r\n3779,Ter. Cotta-ULT VY L,255,177,152,FFB198\r\n3781,Mocha Brown-DK,113,71,42,71472A\r\n3782,Mocho Brown-LT,206,175,144,CEAF90\r\n3787,Brown Grey - DK,139,109,115,8B6D73\r\n3790,Beige Grey - ULT DK,140,117,109,8C756D\r\n3799,Pewter Grey - VY DK,81,76,83,514C53\r\n`\r\n\r\nexport {rgb_dmc_data}","import React, { Component } from 'react';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\n\r\nclass GenPdf extends Component {\r\n    state = {\r\n        loading: false\r\n    } \r\n\r\n    genPdf = () => {\r\n        this.setState({loading: true});\r\n\r\n        var pdf = new jsPDF('l','px','a4');\r\n        let a4prop = Math.sqrt(2);\r\n        let spacing = 10;\r\n        var margins = {\r\n            top: 15,\r\n            bottom: 15,\r\n            left: a4prop*15,\r\n            right: a4prop*15\r\n        }\r\n        var width = pdf.internal.pageSize.getWidth() - margins.left - margins.right;    \r\n        var height = pdf.internal.pageSize.getHeight() - margins.top - margins.bottom;\r\n        var noOfStitches = 30;\r\n\r\n        var borders = document.createElement(\"canvas\");\r\n        borders.width = width + margins.left + margins.right;\r\n        borders.height = height + margins.top + margins.bottom;\r\n        var ctxbor = borders.getContext('2d');\r\n        ctxbor.strokeRect(margins.left/2, margins.top/2,\r\n                            width + +margins.left/2 + margins.right/2, \r\n                            height + margins.top/2 + margins.bottom/2)\r\n        var bordersImg = borders.toDataURL(\"image/png\");\r\n        \r\n\r\n        var paletteTable = document.getElementsByClassName(\"paletteTable\")[0]\r\n        var paletteImage = \"\";\r\n        var pattern = new Image();\r\n        pattern.src = this.props.fileUrl;\r\n        pattern.onload = () => {\r\n            var pieces = splitImage(pattern, noOfStitches, this.props.stitchSize)\r\n            var imagePieces = pieces[0];\r\n            var imageIdx = pieces[1];\r\n            html2canvas(paletteTable, {logging: false}).then(\r\n                (canvas) => {\r\n                    paletteImage = canvas.toDataURL(\"image/png\");\r\n    \r\n                    var tableWidth = (width-height);\r\n                    var tableHeight = (canvas.height/canvas.width)*tableWidth;\r\n                    if(tableHeight > height) {\r\n                        tableHeight = height - spacing;\r\n                    }\r\n    \r\n                    for (let i = 0; i < imagePieces.length; i++) {\r\n                        pdf.addImage(\r\n                            bordersImg,\r\n                            'PNG',\r\n                            0, \r\n                            0,\r\n                            width + margins.left + margins.right,\r\n                            height + margins.top + margins.bottom,\r\n                            '','FAST')\r\n\r\n                        if (i > 0) {\r\n                            pdf.addImage(\r\n                                imageIdx[i],\r\n                                'PNG',\r\n                                margins.left + (tableWidth - height/4)/2, \r\n                                (3/4)*height + margins.top - spacing/2,\r\n                                height/4,\r\n                                height/4,\r\n                                '','FAST')\r\n                        }\r\n                        pdf.addImage(\r\n                            paletteImage,\r\n                            'PNG',\r\n                            margins.left, \r\n                            margins.top + spacing/2,\r\n                            tableWidth,\r\n                            tableHeight,\r\n                            '','FAST')\r\n                        \r\n                        pdf.addImage(\r\n                            imagePieces[i],\r\n                            'PNG',\r\n                            margins.left + tableWidth + spacing,\r\n                            margins.top + spacing/2,\r\n                            height - spacing,\r\n                            height - spacing,\r\n                            '','FAST')\r\n\r\n                        if (i === 0 && \r\n                            margins.top + spacing/2 + tableHeight > \r\n                            (3/4)*height + margins.top - spacing) {\r\n                            tableHeight = (3/4)*height - 2*spacing;\r\n                        }\r\n\r\n                        if (i !== imagePieces.length - 1) {\r\n                            pdf.addPage('a4', 'landscape')\r\n                        }\r\n                    }\r\n                    pdf.save('stitch_pattern.pdf');\r\n                    this.setState({loading: false});\r\n                }\r\n            )\r\n        }       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"GenPdf\" className={this.state.loading?\"loading\":\"\"}>\r\n                <input type=\"submit\" \r\n                        value={this.state.loading?\"↻\":\"Generate PDF\"}\r\n                        onClick = {()=>{this.genPdf();}} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GenPdf;\r\n\r\n\r\nvar splitImage = (img, noOfStitches, stitchSize) => {\r\n    let size = stitchSize * noOfStitches\r\n    var cols = Math.ceil(img.width/size);\r\n    var rows = Math.ceil(img.height/size);\r\n    var lineWidth = 5;\r\n    \r\n    var pieces = new Array(cols*rows+1)\r\n\r\n    var canvasWhole = document.createElement('canvas');\r\n    canvasWhole.width = size + 2*lineWidth;\r\n    canvasWhole.height = size + 2*lineWidth;\r\n    var ctxWhole = canvasWhole.getContext('2d');\r\n    var xStart = lineWidth;\r\n    var yStart = lineWidth;\r\n    var wholeSize = 0;\r\n\r\n    if (img.height > img.width) {\r\n        xStart += (size/2) - ((img.width/img.height)*size)/2;\r\n        yStart += 0;\r\n        wholeSize = (size/img.height)*size;\r\n        ctxWhole.drawImage(img, 0, 0, img.width, img.height,  \r\n                            xStart, yStart, \r\n                            (img.width/img.height)*size, size);\r\n    } else {\r\n        xStart += 0;\r\n        yStart += (size/2) - ((img.height/img.width)*size)/2;\r\n        wholeSize = (size/img.width)*size;\r\n        ctxWhole.drawImage(img, 0, 0, img.width, img.height, \r\n                            xStart, yStart, \r\n                            size, (img.height/img.width)*size);\r\n    }\r\n\r\n    for(var i = 0; i < cols; i++) {\r\n        for(var j = 0; j < rows; j++) {\r\n            ctxWhole.lineWidth = lineWidth;\r\n            ctxWhole.strokeStyle = \"#ff0000\"\r\n            ctxWhole.strokeRect(xStart + i*wholeSize, yStart + j*wholeSize, \r\n                                wholeSize, wholeSize)\r\n\r\n            let canvas = document.createElement('canvas');\r\n            canvas.width = size + stitchSize;\r\n            canvas.height = size + stitchSize;\r\n            let ctx = canvas.getContext('2d');\r\n            ctx.strokeRect(stitchSize, 0, size, size)\r\n            for (let sq = 0; sq < noOfStitches**2; sq++) {\r\n                ctx.strokeRect(((sq%noOfStitches)+1)*stitchSize,\r\n                            Math.floor(sq/noOfStitches)*stitchSize,\r\n                                stitchSize,stitchSize)\r\n            }\r\n            ctx.drawImage(img, i*size, j*size, size, size, \r\n                            stitchSize, 0, \r\n                            size, size);\r\n\r\n            ctx.textAlign=\"center\"; \r\n            ctx.textBaseline = \"middle\";\r\n            ctx.font = \"bold 20pt Courier\";\r\n            for (let sq = 0; sq < noOfStitches; sq++) {\r\n                ctx.fillText(sq+1, \r\n                    stitchSize/2, \r\n                    (sq+1/2)*stitchSize);\r\n                ctx.fillText(sq+1, \r\n                    (sq+1+1/2)*stitchSize, \r\n                    size + stitchSize/2);\r\n            }\r\n            pieces[i*rows + j + 1] = canvas.toDataURL();\r\n        }\r\n    }\r\n\r\n    xStart -= lineWidth/2;\r\n    yStart -= lineWidth/2;\r\n\r\n    if (xStart > lineWidth/2) {\r\n        ctxWhole.clearRect(xStart + (img.width/img.height)*size, 0, 2*size, 2*size)\r\n        ctxWhole.clearRect(0, yStart + size, 2*size, 2*size)\r\n        ctxWhole.beginPath(); \r\n        ctxWhole.moveTo(xStart, yStart + size);\r\n        ctxWhole.lineTo(xStart + (img.width/img.height)*size, yStart + size)\r\n        ctxWhole.lineTo(xStart + (img.width/img.height)*size, yStart)\r\n        ctxWhole.stroke();\r\n    } else {\r\n        ctxWhole.clearRect(0, yStart + (img.height/img.width)*size, 2*size, 2*size)\r\n        ctxWhole.clearRect(xStart + size, 0, 2*size, 2*size)\r\n        ctxWhole.beginPath(); \r\n        ctxWhole.moveTo(xStart + size, yStart);\r\n        ctxWhole.lineTo(xStart + size, yStart + (img.height/img.width)*size)\r\n        ctxWhole.lineTo(xStart, yStart + (img.height/img.width)*size)\r\n        ctxWhole.stroke();\r\n    }\r\n    pieces[0] = canvasWhole.toDataURL();\r\n\r\n    var pieces_idx = new Array(cols*rows+1)\r\n    for(let i = 0; i < cols; i++) {\r\n        for(let j = 0; j < rows; j++) {\r\n            let canvas = document.createElement('canvas');\r\n            canvas.width = canvasWhole.width;\r\n            canvas.height = canvasWhole.height;\r\n            let ctx = canvas.getContext('2d');\r\n            ctx.drawImage(canvasWhole, 0, 0)\r\n            ctx.fillStyle = 'rgba(0,0,0,0.5)';\r\n            ctx.fillRect(xStart, \r\n                        yStart, \r\n                        cols*wholeSize, rows*wholeSize)\r\n            ctx.fillStyle = 'rgba(255,255,255,.4)';\r\n            ctx.fillRect(xStart + i*wholeSize, \r\n                        yStart + j*wholeSize, \r\n                        wholeSize, wholeSize)\r\n            \r\n            if (xStart > lineWidth/2) {\r\n                ctx.clearRect(xStart + (img.width/img.height)*size, 0, 2*size, 2*size)\r\n                ctx.clearRect(0, yStart + size, 2*size, 2*size)\r\n            } else {\r\n                ctx.clearRect(0, yStart + (img.height/img.width)*size, 2*size, 2*size)\r\n                ctx.clearRect(xStart + size, 0, 2*size, 2*size)\r\n            }\r\n\r\n            pieces_idx[i*rows + j + 1] = canvas.toDataURL();\r\n        }\r\n    }\r\n\r\n    return [pieces, pieces_idx];\r\n}","import React, { Component } from 'react';\r\nimport {toggleAliasing} from '../utilities/utilities';\r\nimport GenPdf from './GenPdf';\r\n\r\nclass PatternMaker extends Component {\r\n    state = {\r\n        updateTimer: '',\r\n        timeout: 300,\r\n        scale : 40\r\n    }\r\n    \r\n    onImgLoad () {\r\n        var img = new Image();\r\n        img.src = this.props.fileUrl;\r\n        let scale = this.state.scale;\r\n\r\n        img.onload = () => {\r\n            var canvas = document.getElementById('PatternMakerCanvas');\r\n            var buffer = document.createElement('canvas');\r\n            var canvasContainer = document.getElementsByClassName(\"canvasContainer Pattern\")[0];\r\n            \r\n            buffer.width = img.width*scale;\r\n            buffer.height = img.height*scale;\r\n            let ratio = img.width/img.height;\r\n            \r\n            if (ratio>1) {\r\n                canvas.width = canvasContainer.offsetWidth;\r\n                canvas.height = canvas.width/ratio;\r\n            } else {\r\n                canvas.height = canvasContainer.offsetHeight;\r\n                canvas.width = canvas.height*ratio;\r\n            }\r\n            \r\n\r\n            var ctx = canvas.getContext('2d');\r\n            var ctxb = buffer.getContext('2d');\r\n            ctxb.clearRect(0, 0, buffer.width, buffer.height);\r\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            toggleAliasing(ctxb, false);\r\n            ctxb.drawImage(img, 0, 0, img.width, img.height, \r\n                                0, 0, buffer.width, buffer.height);\r\n            let imgdt = ctxb.getImageData(0, 0, buffer.width, buffer.height).data           \r\n\r\n            let palette = this.props.palette;           \r\n\r\n            for (let i = 0; i < buffer.width; i += scale) {\r\n                for (let j = 0; j < buffer.height; j += scale) {\r\n                    let r = imgdt[4*(i + buffer.width*j) + 0];\r\n                    let g = imgdt[4*(i + buffer.width*j) + 1];\r\n                    let b = imgdt[4*(i + buffer.width*j) + 2];\r\n                    let color = \"\" + r + g + b;\r\n                    let char = \"\"\r\n\r\n                    if (color in palette) {\r\n                        char = palette[color][\"symb\"];\r\n                    }\r\n\r\n                    if (this.props.nocolor) {\r\n                        ctxb.fillStyle = \"#ffffff\"\r\n                        ctxb.fillRect(i, j, scale, scale)\r\n                    }\r\n\r\n                    ctxb.fillStyle = \"#000000\"\r\n                    ctxb.strokeStyle = \"#000000\"\r\n                    if (((r+g+b)/3 < 10) && !this.props.nocolor) {\r\n                        ctxb.strokeStyle = \"#202020\"\r\n                    }\r\n                    ctxb.strokeRect(i,j, scale, scale)\r\n\r\n                    if ((i/scale)%10 === 0 &&\r\n                        (j/scale)%10 === 0) {\r\n                            ctxb.lineWidth = 8\r\n                            ctxb.strokeRect(i,j,10*scale,10*scale)\r\n                        }\r\n                    ctxb.lineWidth = 1\r\n\r\n                    ctxb.textAlign=\"center\"; \r\n                    ctxb.textBaseline = \"middle\";\r\n                    ctxb.font = \"bold 25pt Courier\";\r\n                    if (((r+g+b)/3 < 120) && !this.props.nocolor) {\r\n                        ctxb.fillStyle = \"#ffffff\"\r\n                    } else {\r\n                        ctxb.fillStyle = \"#000000\"\r\n                    }\r\n                    \r\n                    ctxb.fillText(char,\r\n                                    i + scale/2,\r\n                                    j + scale/2)\r\n                }\r\n            }\r\n            \r\n            this.setState({\r\n                \"patternUrl\": buffer.toDataURL(),\r\n                \"stitchSize\": scale\r\n            })\r\n\r\n            this.props.outputHandler({\r\n                \"patternUrl\": this.state.patternUrl,\r\n                \"stitchSize\": scale\r\n            })\r\n\r\n            toggleAliasing(ctx, false);\r\n            ctx.drawImage(buffer, 0, 0, buffer.width, buffer.height,\r\n                                    0, 0, canvas.width, canvas.height);\r\n        }        \r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.fileUrl !== prevProps.fileUrl ||\r\n            this.props.palette !== prevProps.palette ||\r\n            this.props.nocolor !== prevProps.nocolor)\r\n        {\r\n            clearTimeout(this.state.updateTimer)\r\n            this.setState({ updateTimer: setTimeout(() => {\r\n                this.onImgLoad();\r\n                }, this.state.timeout)})\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"picEditor Pattern\">\r\n                <div className =\"canvasContainer Pattern\">\r\n                    <canvas className=\"picCanvas Pattern\" id=\"PatternMakerCanvas\"></canvas>\r\n                </div>\r\n                <GenPdf fileUrl = {this.state.patternUrl}\r\n                        stitchSize = {this.state.scale} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PatternMaker;","import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nclass ImgUploader extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"ImgUploader\" \r\n                className={this.props.show?\"hide\":\"\"}>\r\n            <div id=\"BackgroundImage\"></div>\r\n            <img className=\"logo\" \r\n                    src={require(\"../assets/logo.png\")}\r\n                    alt=\"logo\"/>\r\n            <p className=\"landingText\">Create cross-stitch patterns from digital images.</p>\r\n            <Dropzone onDrop={this.props.handleDropFile}>\r\n            {({getRootProps, getInputProps, isDragActive}) => {\r\n                return (\r\n                    <div\r\n                    {...getRootProps({\r\n                        className: (\"dropBox \" + (isDragActive?\"active\":\"\"))\r\n                    })}>\r\n                        <input {...getInputProps({\r\n                            type: \"file\",\r\n                            id:\"img_upload\",\r\n                            accept:\"image/*\",\r\n                            onChange: ()=>{this.props.handleSelectFile()}\r\n                        })} />\r\n                        {\r\n                            isDragActive ?\r\n                            <p>Drop image here...</p> :\r\n                            <p>Drop your image here <br/> or click to select file.</p>\r\n                        }\r\n                    </div>\r\n                )\r\n                }}\r\n            </Dropzone>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImgUploader;","import React, { Component } from 'react';\r\nimport PreEditor from './PreEditor';\r\nimport Pixelator from './Pixelator';\r\nimport ColorMapper from './ColorMapper';\r\nimport PatternMaker from './PatternMaker';\r\n\r\nimport ImgUploader from './ImgUploader';\r\nimport './AppContainer.css';\r\n\r\n\r\nclass AppContainer extends Component {\r\n\r\n    state = {\r\n        width: 0,\r\n        height: 0,\r\n        palette: {},\r\n        stitchSize: 1,\r\n        nocolor: false,\r\n        show: '',\r\n        fileUrl : '',\r\n        preEditUrl : '',\r\n        pixelUrl : '',\r\n        colorUrl: '',\r\n        patternUrl: ''\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps.newImage !== this.props.newImage) {\r\n            this.setState({\r\n                fileUrl: '',\r\n                show: false\r\n            })\r\n        }\r\n    }\r\n\r\n    loadFile = () => {\r\n        setTimeout(()=>{\r\n            this.setState({\r\n                show: true\r\n            });\r\n        }, 0);\r\n        \r\n    }\r\n\r\n    handleSelectFile = (files) => {\r\n        var file = document.getElementById('img_upload').files[0];\r\n        if (file) {\r\n            this.setState({ fileUrl : window.URL.createObjectURL(file) });\r\n            this.loadFile();\r\n        }\r\n    }\r\n\r\n    handleDropFile = (files) => {\r\n        if (files) {\r\n            this.setState({ fileUrl : window.URL.createObjectURL(files[0])});\r\n            this.loadFile();\r\n        }\r\n    }\r\n\r\n    outputHandler = (url_object) => {\r\n        this.setState(url_object)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"AppContainer\" >\r\n            <ImgUploader show={this.state.show} \r\n                            handleSelectFile={this.handleSelectFile} \r\n                            handleDropFile={this.handleDropFile} />\r\n            <div id=\"EditorContainer\" \r\n                className={this.state.show?\"\":\"hide\"}>\r\n                <div id=\"BackgroundImage\"></div>\r\n                <div className=\"picEditorContainer\">\r\n                <p className=\"picEditorTitle\">Pre-Processing</p>\r\n                <PreEditor fileUrl = {this.state.fileUrl}\r\n                            outputHandler = {this.outputHandler}  />\r\n                </div>\r\n                <div className=\"picEditorContainer\">\r\n                <p className=\"picEditorTitle\">Size Reduction</p>\r\n                <Pixelator fileUrl = {this.state.preEditUrl} \r\n                            outputHandler = {this.outputHandler}  />\r\n                </div>\r\n                <div className=\"picEditorContainer\">\r\n                <p className=\"picEditorTitle\">Color Reduction</p>\r\n                <ColorMapper fileUrl = {this.state.pixelUrl}\r\n                            outputHandler = {this.outputHandler}\r\n                            initWidth = {this.state.width}\r\n                            initHeight = {this.state.height}\r\n                            palette = {this.state.palette}  \r\n                            nocolor = {this.state.nocolor} />\r\n                </div>\r\n                <div className=\"picEditorContainer\">\r\n                <p className=\"picEditorTitle\">Pattern Preview</p>\r\n                <PatternMaker fileUrl = {this.state.colorUrl} \r\n                            palette = {this.state.palette}\r\n                            outputHandler = {this.outputHandler}  \r\n                            nocolor = {this.state.nocolor} />\r\n                </div>\r\n                <div id=\"Footer\">\r\n                <p>\r\n                    Site created by <a className=\"website\"\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href=\"https://msfstef.github.io/\">\r\n                        Stefanos Mousafeiris\r\n                    </a> on Feb 2019.\r\n                </p>\r\n                <a className=\"paypal\"\r\n                    target=\"_blank\" rel=\"noopener noreferrer\"\r\n                    href=\"https://paypal.me/msfstef\">\r\n                    Buy me coffee?\r\n                </a>\r\n                </div>             \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppContainer;","import React, { Component } from 'react';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"Header\">\r\n                <img className=\"logo\" \r\n                    src={require(\"../assets/logo.png\")}\r\n                    alt=\"logo\"\r\n                    onClick={()=>{\r\n                        this.props.handleMenu()\r\n                        }}/>\r\n                \r\n                <div className=\"itemContainer\">\r\n                <p className=\"new item\"\r\n                    onClick={()=>{\r\n                        this.props.handleMenu()\r\n                        }}>\r\n                    New Pattern\r\n                </p>\r\n                <a className=\"about item\"\r\n                    target=\"_blank\" rel=\"noopener noreferrer\"\r\n                    href=\"https://msfstef.github.io/#/about\">\r\n                    About\r\n                </a>\r\n                <a className=\"contact item\"\r\n                    target=\"_blank\" rel=\"noopener noreferrer\"\r\n                    href=\"https://msfstef.github.io/#/contact\">\r\n                    Contact\r\n                </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport AppContainer from './components/AppContainer';\r\nimport Header from './components/Header';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    newImage: false\r\n  }\r\n\r\n  handleMenu = () => {\r\n    this.setState({newImage: !this.state.newImage})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header handleMenu={this.handleMenu} />\r\n        <AppContainer newImage={this.state.newImage} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}